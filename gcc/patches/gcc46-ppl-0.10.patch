diff -Nur gcc-4.6.0-vanilla/configure gcc-4.6.0/configure
--- gcc-4.6.0-vanilla/configure	2011-03-16 19:27:36.000000000 +0100
+++ gcc-4.6.0/configure	2011-04-07 21:41:50.876254183 +0200
@@ -5776,7 +5776,7 @@
     saved_CFLAGS="$CFLAGS"
     CFLAGS="$CFLAGS $pplinc $gmpinc"
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 0.11 (revision 0 or later) of PPL" >&5
-$as_echo_n "checking for version 0.11 (revision 0 or later) of PPL... " >&6; }
+$as_echo_n "checking for version 0.10 (revision 0 or later) of PPL... " >&6; }
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 #include "ppl_c.h"
@@ -5784,7 +5784,7 @@
 main ()
 {
 
-    #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 11
+    #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 10
     choke me
     #endif
 
diff -Nur gcc-4.6.0-vanilla/configure.ac gcc-4.6.0/configure.ac
--- gcc-4.6.0-vanilla/configure.ac	2011-03-16 19:27:36.000000000 +0100
+++ gcc-4.6.0/configure.ac	2011-04-07 21:41:04.254292244 +0200
@@ -1688,9 +1688,9 @@
   if test "$enable_ppl_version_check" != no; then
     saved_CFLAGS="$CFLAGS"
     CFLAGS="$CFLAGS $pplinc $gmpinc"
-    AC_MSG_CHECKING([for version 0.11 (revision 0 or later) of PPL])
+    AC_MSG_CHECKING([for version 0.10 (revision 0 or later) of PPL])
     AC_TRY_COMPILE([#include "ppl_c.h"],[
-    #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 11
+    #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 10
     choke me
     #endif
     ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); ppllibs= ; pplinc= ; with_ppl=no ])
diff -Nur gcc-4.6.0-vanilla/gcc/doc/install.texi gcc-4.6.0/gcc/doc/install.texi
--- gcc-4.6.0-vanilla/gcc/doc/install.texi	2011-03-21 13:13:26.000000000 +0100
+++ gcc-4.6.0/gcc/doc/install.texi	2011-04-07 21:40:12.957333674 +0200
@@ -362,7 +362,7 @@
 distribution is found in a subdirectory of your GCC sources named
 @file{mpc}, it will be built together with GCC@.
 
-@item Parma Polyhedra Library (PPL) version 0.11
+@item Parma Polyhedra Library (PPL) version 0.10
 
 Necessary to build GCC with the Graphite loop optimizations.
 It can be downloaded from @uref{http://www.cs.unipr.it/ppl/Download/}.
diff -Nur gcc-4.6.0-vanilla/gcc/graphite-ppl.c gcc-4.6.0/gcc/graphite-ppl.c
--- gcc-4.6.0-vanilla/gcc/graphite-ppl.c	2011-01-25 07:46:43.000000000 +0100
+++ gcc-4.6.0/gcc/graphite-ppl.c	2011-04-07 21:40:12.958333672 +0200
@@ -521,6 +521,15 @@
 bool
 ppl_powerset_is_empty (ppl_Pointset_Powerset_C_Polyhedron_t ps)
 {
+#if PPL_VERSION_MAJOR == 0 && PPL_VERSION_MINOR < 11
+  /* On PPL 0.10,
+     ppl_Pointset_Powerset_C_Polyhedron_contains_integer_point (ps)
+     takes too long on some cases and so we call _is_empty instead.  */
+  return ppl_Pointset_Powerset_C_Polyhedron_is_empty (ps);
+
+#else
+  /* On PPL 0.11 or later, we can check for integer feasibility using
+     the PIP solver.  */
   ppl_PIP_Problem_t pip;
   ppl_dimension_type d;
   ppl_const_Constraint_System_t pcs;
@@ -561,6 +570,7 @@
   ppl_delete_Pointset_Powerset_C_Polyhedron_iterator (end);
 
   return !has_integer_solutions;
+#endif
 }
 
 #endif
diff -Nur gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-11.c gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-11.c
--- gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-11.c	2011-01-25 07:45:54.000000000 +0100
+++ gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-11.c	2011-04-07 21:40:12.974333658 +0200
@@ -46,5 +46,5 @@
   return 0;
 }
 
-/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" } } */
+/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" { xfail *-*-* } } } */
 /* { dg-final { cleanup-tree-dump "graphite" } } */
diff -Nur gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-13.c gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-13.c
--- gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-13.c	2011-01-25 07:45:54.000000000 +0100
+++ gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-13.c	2011-04-07 21:40:12.975333657 +0200
@@ -50,5 +50,5 @@
 }
 
 
-/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" } } */
+/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" { xfail *-*-* } } } */
 /* { dg-final { cleanup-tree-dump "graphite" } } */
diff -Nur gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-1.c gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-1.c
--- gcc-4.6.0-vanilla/gcc/testsuite/gcc.dg/graphite/interchange-1.c	2011-01-25 07:45:54.000000000 +0100
+++ gcc-4.6.0/gcc/testsuite/gcc.dg/graphite/interchange-1.c	2011-04-07 21:40:12.975333657 +0200
@@ -49,5 +49,5 @@
   return 0;
 }
 
-/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" } } */
+/* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" { xfail *-*-* } } } */
 /* { dg-final { cleanup-tree-dump "graphite" } } */
diff -Nur gcc-4.6.0-vanilla/gcc/testsuite/gfortran.dg/graphite/interchange-3.f90 gcc-4.6.0/gcc/testsuite/gfortran.dg/graphite/interchange-3.f90
--- gcc-4.6.0-vanilla/gcc/testsuite/gfortran.dg/graphite/interchange-3.f90	2011-01-25 07:47:34.000000000 +0100
+++ gcc-4.6.0/gcc/testsuite/gfortran.dg/graphite/interchange-3.f90	2011-04-07 21:40:12.976333657 +0200
@@ -24,5 +24,5 @@
 
 end Program FOO
 
-! { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" } }
+! { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" { xfail *-*-* } } }
 ! { dg-final { cleanup-tree-dump "graphite" } }
