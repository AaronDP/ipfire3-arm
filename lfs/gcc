###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = gcc
VER        = 4.3.1

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DIR_APP    = $(DIR_SRC)/$(THISAPP)
CFLAGS     = -pipe
CXXFLAGS   =

ifeq "$(STAGE)" "base"
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)
else
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)-pass$(PASS)
endif

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE) \
	$(THISAPP)-uClibc_conf-1.patch \
	$(THISAPP)-uClibc_locale-1.patch \
	$(THISAPP)-fstack_protector-1.patch \
	$(THISAPP)-fortify_source-2.patch \
	$(THISAPP)-fpie-1.patch

install : $(TARGET)

download : $(objects)

$(objects) :
	@$(LOAD)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : 
	@$(PREBUILD)
	@rm -rf $(DIR_APP) $(DIR_SRC)/gcc-build && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)
	-mkdir -v $(DIR_SRC)/gcc-build

ifeq "$(STAGE)" "toolchain"
ifeq "$(PASS)" "1"
ifeq "$(PIE)" "1"
	## Enable -fPIC by default
	cd $(DIR_APP) && sed 's/^\(#define CC1_SPEC.*\)\("\)$$/\1 %{fno-pic|fpic|fPIC:;:-fPIC}\2/' \
		-i gcc/config/i386/linux.h
endif
	cd $(DIR_SRC)/gcc-build && \
		../$(THISAPP)/configure \
			--target=$(IFS_TARGET) \
			--prefix=$(TOOLS_DIR) \
			--enable-languages=c \
			--disable-shared \
			--disable-threads \
			--disable-multilib \
			--disable-libmudflap \
			--disable-libssp \
			--disable-libgomp \
			--disable-nls \
			--enable-checking=none \
			--with-mpfr=$(TOOLS_DIR) \
			--with-gmp=$(TOOLS_DIR) \
			--disable-werror
	cd $(DIR_SRC)/gcc-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/gcc-build && make install

	ln -fvs gcc $(TOOLS_DIR)/bin/cc
	ln -sfv libgcc.a $$($(IFS_TARGET)-gcc -print-libgcc-file-name | sed 's/libgcc/&_eh/')
	ln -svf ../include-fixed/syslimits.h \
		$(TOOLS_DIR)/lib/gcc/$(IFS_TARGET)/$(VER)/include/syslimits.h
	ln -svf ../include-fixed/limits.h \
		$(TOOLS_DIR)/lib/gcc/$(IFS_TARGET)/$(VER)/include/limits.h
endif

ifeq "$(PASS)" "2"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fortify_source-2.patch
ifeq "$(SSP)" "1"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fstack_protector-1.patch
endif
ifeq "$(PIE)" "1"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fpie-1.patch
endif
	cd $(DIR_APP) && sed 's@\./fixinc\.sh@-c true@' -i gcc/Makefile.in
	cd $(DIR_APP) && sed 's/^XCFLAGS =$$/& -fomit-frame-pointer/' -i gcc/Makefile.in
	cd $(DIR_APP) && \
		for file in $$(find gcc/config -name linux64.h -o -name linux.h); do \
			cp -uv $$file{,.orig}; \
			sed -e 's@/lib\(64\)\?\(32\)\?/ld@$(TOOLS_DIR)&@g' \
				-e 's@/usr@$(TOOLS_DIR)@g' $$file.orig > $$file; \
			echo -e "\n#undef STANDARD_INCLUDE_DIR\n#define STANDARD_INCLUDE_DIR 0" >> $$file; \
			touch $$file.orig; \
		done

	cd $(DIR_SRC)/gcc-build && \
		CC="$(IFS_TARGET)-gcc -B$(TOOLS_DIR)/lib/" \
		AR=$(IFS_TARGET)-ar \
		RANLIB=$(IFS_TARGET)-ranlib \
		../$(THISAPP)/configure \
			--prefix=$(TOOLS_DIR) \
			--with-local-prefix=$(TOOLS_DIR) \
			--with-mpfr=$(TOOLS_DIR) \
			--with-gmp=$(TOOLS_DIR) \
			--enable-clocale=gnu \
			--enable-shared \
			--enable-threads=posix \
			--enable-__cxa_atexit \
			--enable-languages=c,c++ \
			--disable-libstdcxx-pch \
			--disable-bootstrap \
			--disable-werror \
			--disable-nls \
			--disable-libgomp
	## Libgomp was disabled here because it doesn't want to compile ##
	cd $(DIR_SRC)/gcc-build && make -j $(PARALLELISM)
	cd $(DIR_SRC)/gcc-build && make install
endif
endif

ifeq "$(STAGE)" "base"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-strncat_chk-1.patch
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fortify_source-2.patch
ifeq "$(SSP)" "1"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fstack_protector-1.patch
endif
ifeq "$(PIE)" "1"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-fpie-2.patch
endif
	cd $(DIR_APP) && sed -i 's/install_to_$$(INSTALL_DEST) //' libiberty/Makefile.in
	cd $(DIR_APP) && sed -i 's/^XCFLAGS =$$/& -fomit-frame-pointer/' gcc/Makefile.in
	cd $(DIR_APP) && sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	cd $(DIR_SRC)/gcc-build && ../$(THISAPP)/configure \
						--prefix=/usr \
						--libexecdir=/usr/lib \
						--enable-shared \
						--enable-threads=posix \
						--enable-__cxa_atexit \
						--enable-clocale=gnu \
						--enable-languages=c,c++ \
						--disable-bootstrap \
						--disable-werror \
						--disable-libgomp
	## Libgomp was disabled here because it doesn't want to compile ##
	cd $(DIR_SRC)/gcc-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/gcc-build && make install

	ln -sfv ../usr/bin/cpp /lib
	ln -sfv gcc /usr/bin/cc
endif

ifeq "$(STAGE)" "installer"
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-uClibc_conf-1.patch
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-uClibc_locale-1.patch
ifeq "$(PASS)" "1"
	### Copying headers to install area of bootstrap gcc,
	#   so it can build libgcc2
	mkdir -pv $(UCLIBC_CC_CORE_STATIC_DIR)/$(UCLIBC_TARGET)/include
	cp -rfv $(UCLIBC_HEADERS_DIR)/* $(UCLIBC_CC_CORE_STATIC_DIR)/$(UCLIBC_TARGET)/include

	cd $(DIR_SRC)/gcc-build && CC_FOR_BUILD="$(HOST_GCC)" ../$(THISAPP)/configure \
						--target=$(UCLIBC_TARGET) \
						--prefix=$(UCLIBC_CC_CORE_STATIC_DIR) \
						--with-local-prefix=$(UCLIBC_SYSROOT_DIR) \
						--with-mpfr=$(TOOLS_DIR) \
						--with-gmp=$(TOOLS_DIR) \
						--disable-multilib \
						--with-newlib \
						--with-sysroot=$(UCLIBC_SYSROOT_DIR) \
						--enable-__cxa_atexit \
						--disable-nls \
						--enable-threads=no \
						--enable-symvers=gnu \
						--enable-languages=c \
						--disable-shared \
						--enable-target-optspace
	cd $(DIR_SRC)/gcc-build && make $(PARALLELISMFLAGS) all-gcc
	cd $(DIR_SRC)/gcc-build && make install-gcc
endif

ifeq "$(PASS)" "2"
	cd $(DIR_SRC)/gcc-build && CC_FOR_BUILD="$(HOST_GCC)" ../$(THISAPP)/configure \
						--target=$(UCLIBC_TARGET) \
						--prefix=$(UCLIBC_DIR) \
						--with-local-prefix=$(UCLIBC_SYSROOT_DIR) \
						--with-mpfr=$(TOOLS_DIR) \
						--with-gmp=$(TOOLS_DIR) \
						--disable-multilib \
						--with-sysroot=$(UCLIBC_SYSROOT_DIR) \
						--enable-__cxa_atexit \
						--disable-nls \
						--enable-threads=posix \
						--enable-symvers=gnu \
						--enable-c99 \
						--enable-long-long \
						--enable-languages=c,c++ \
						--enable-target-optspace \
						--enable-shared
	cd $(DIR_SRC)/gcc-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/gcc-build && make install

	ln -svf $(UCLIBC_DIR)/bin/$(UCLIBC_TARGET)-gcc \
		$(UCLIBC_DIR)/bin/$(UCLIBC_TARGET)-cc
	cp -vaf $(UCLIBC_DIR)/$(UCLIBC_TARGET)/lib/* $(UCLIBC_SYSROOT_DIR)/usr/lib
endif
endif

	@rm -rf $(DIR_APP) $(DIR_SRC)/gcc-build
	@$(POSTBUILD)
