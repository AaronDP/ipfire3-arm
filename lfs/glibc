###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = glibc
VER        = 2.7

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DIR_APP    = $(DIR_SRC)/$(THISAPP)

CFLAGS     =
CXXFLAGS   =

ifeq "$(firstword $(MAKEFILE_LIST))" "$(PKG_NAME)"
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)
else
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)-cross
endif

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE) glibc-libidn-$(VER).tar.bz2

install : $(TARGET)

download :$(patsubst %,$(DIR_DL)/%,$(objects))

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) $(DIR_SRC)/glibc-build && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)
	@mkdir $(DIR_SRC)/glibc-build

ifeq "$(firstword $(MAKEFILE_LIST))" "$(PKG_NAME)"
	#
	# Normal build
	#
	
ifeq "$(STAGE)" "toolchain"
	cd $(DIR_SRC)/glibc-build && echo "CFLAGS += -march=$(MACHINE)" > configparms
	cd $(DIR_SRC)/glibc-build && CFLAGS="$(CFLAGS)" ../$(THISAPP)/configure \
		--prefix=$(TOOLS_DIR) --disable-profile --enable-add-ons \
		--enable-kernel=2.6.0 --with-binutils=$(TOOLS_DIR)/bin \
		--without-gd --with-headers=$(TOOLS_DIR)/include \
		--without-selinux
		
	cd $(DIR_SRC)/glibc-build && DISTCC_HOSTS="localhost/$(PARALLELISM)" make PARALLELMFLAGS=-j$(PARALLELISM)
	-mkdir -v $(TOOLS_DIR)/etc
	touch $(TOOLS_DIR)/etc/ld.so.conf
	cd $(DIR_SRC)/glibc-build && make install
endif

ifeq "$(STAGE)" "base"
	tar jxf $(DIR_DL)/glibc-libidn-$(VER).tar.bz2 -C $(DIR_APP)
	cd $(DIR_APP) && mv glibc-libidn-$(VER) libidn
	cd $(DIR_APP) && sed -i '/vi_VN.TCVN/d' localedata/SUPPORTED
	cd $(DIR_APP) && sed -i 's|libs -o|libs -L/usr/lib -Wl,-dynamic-linker=$(LINKER) -o|' \
		scripts/test-installation.pl
	cd $(DIR_APP) && sed -i 's|@BASH@|/bin/bash|' elf/ldd.bash.in
	cd $(DIR_SRC)/glibc-build && echo "CFLAGS += -march=$(MACHINE)" > configparms
	cd $(DIR_SRC)/glibc-build && ../$(THISAPP)/configure --prefix=/usr \
    --disable-profile --enable-add-ons --enable-kernel=2.6.0 \
		--libexecdir=/usr/lib/glibc
	
	cd $(DIR_SRC)/glibc-build && DISTCC_HOSTS="localhost/$(PARALLELISM)" make PARALLELMFLAGS=-j$(PARALLELISM)
	touch /etc/ld.so.conf
	cd $(DIR_SRC)/glibc-build && make install
	
	# Locales
	-mkdir -pv /usr/lib/locale
	localedef -i en_US -f UTF-8 en_US.UTF-8
	localedef -i en_US -f ISO-8859-1 en_US
	localedef -i en_GB -f UTF-8 en_GB.UTF-8
	localedef -i en_GB -f ISO-8859-1 en_GB
	
	# Timezone
	cp -v --remove-destination /usr/share/zoneinfo/GMT /etc/localtime
endif
else
	#
	# Cross build
	#

	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-libgcc_eh-1.patch
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-localedef_segfault-1.patch
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-i586_chk-1.patch
	
	echo "libc_cv_forced_unwind=yes" > $(DIR_SRC)/glibc-build/config.cache
	echo "libc_cv_c_cleanup=yes"		>> $(DIR_SRC)/glibc-build/config.cache
	
	cd $(DIR_SRC)/glibc-build && BUILD_CC="gcc" \
																	CC="$(IFS_TARGET)-gcc" \
																	AR="$(IFS_TARGET)-ar" \
																	RANLIB="$(IFS_TARGET)-ranlib" \
																	CFLAGS="-march=$$(cut -d- -f1 <<< $(IFS_TARGET)) -mtune=generic -g -O2" \
																	../$(THISAPP)/configure \
																	--prefix=$(TOOLS_DIR) \
																	--host=${IFS_TARGET} \
																	--build=$(IFS_HOST) \
																	--disable-profile \
																	--enable-add-ons \
																	--with-tls \
																	--enable-kernel=2.6.0 \
																	--with-__thread \
																	--with-binutils=$(CTOOLS_DIR)/bin \
																	--with-headers=$(TOOLS_DIR)/include \
																	--cache-file=config.cache
	
	cd $(DIR_SRC)/glibc-build && make PARALLELMFLAGS=-j$(PARALLELISM)
	cd $(DIR_SRC)/glibc-build && make install

endif

	@rm -rf $(DIR_APP) $(DIR_SRC)/glibc-build
	@$(POSTBUILD)
