###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = linux
VER        = 2.6.27.7

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DIR_APP    = $(DIR_SRC)/$(THISAPP)
CFLAGS     =
CXXFLAGS   =

OBJECT     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)

LOCALVERSION = -ipfire1
FULLVER    = $(VER)$(LOCALVERSION)

# Patches
GRSEC_PATCH    = grsecurity-2.1.12-$(VER)-200811291903.patch
OCF_PATCH      = ocf-linux-26-20080917.patch
REISER4_PATCH  = reiser4-for-$(VER).patch
SQUASHFS_PATCH = $(THISAPP)-squashfs3.4-1.patch

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE) \
	$(OCF_PATCH) \
	$(REISER4_PATCH) \
	$(SQUASHFS_PATCH) \
	$(GRSEC_PATCH)

install : $(OBJECT)

download : $(objects)

$(objects) :
	@$(LOAD)

###############################################################################
# Installation Details
###############################################################################

$(OBJECT) : 
	@$(PREBUILD)
	@rm -rf $(DIR_APP) && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)

	cd $(DIR_APP) && echo "$(LOCALVERSION)" > localversion-ipfire

	### OCF
	#
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(OCF_PATCH)
	cd $(DIR_APP) && echo "source \"crypto/ocf/Kconfig\"" >> crypto/Kconfig

	### Reiser4
	#
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(REISER4_PATCH)

	### Squashfs
	#
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(SQUASHFS_PATCH)

	### GrSecurity
	#
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(GRSEC_PATCH)
	rm -f $(DIR_APP)/localversion-grsec

ifeq "$(STAGE)" "toolchain"
	install -dv $(TOOLS_DIR)/include
	cd $(DIR_APP) && make mrproper
	cd $(DIR_APP) && make ARCH=x86 headers_check
	cd $(DIR_APP) && make ARCH=x86 INSTALL_HDR_PATH=dest headers_install
	cd $(DIR_APP) && cp -rv dest/include/* $(TOOLS_DIR)/include
endif

ifeq "$(STAGE)" "base"
	cd $(DIR_APP) && make mrproper
	cd $(DIR_APP) && make ARCH=x86 headers_check
	cd $(DIR_APP) && make ARCH=x86 INSTALL_HDR_PATH=dest headers_install
	cd $(DIR_APP) && cp -rv dest/include/* /usr/include
endif

ifeq "$(STAGE)" "ipfire"
	cd $(DIR_APP) && make mrproper

	if [ "$(IFS_ARCH)" == "i586" ]; then \
		sed -e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
			-e "s/^# CONFIG_MPENTIUMIII is not set/CONFIG_MPENTIUMII=y/" \
			< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config; \
	elif [ "$(IFS_ARCH)" == "i486" ]; then \
		sed -e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
			-e "s/^# CONFIG_M486 is not set/CONFIG_M486=y/" \
			< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config; \
	elif [ "$(IFS_ARCH)" == "via-c7" ]; then \
		sed -e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
			-e "s/^# CONFIG_MVIAC7 is not set/CONFIG_MVIAC7=y/" \
			< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config; \
	elif [ "$(IFS_ARCH)" == "via-c3" ]; then \
		sed -e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
			-e "s/^# CONFIG_MVIAC3_2 is not set/CONFIG_MVIAC3_2=y/" \
			< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config; \
	else \
		cp -f $(DIR_CONF)/kernel/kernel.config $(DIR_APP)/.config; \
	fi

	# Fixed CFLAGS when using distcc
	cd $(DIR_APP) && sed -e "s/-D__KERNEL__/& -fno-PIE/" -i Makefile

	cd $(DIR_APP) && yes "" | make oldconfig
	
	cd $(DIR_APP) && make $(PARALLELISMFLAGS)
	cd $(DIR_APP) && make modules_install
	
	cd $(DIR_APP) && cp -v arch/x86/boot/bzImage /boot/$(SNAME)kernel-$(FULLVER)
	cd $(DIR_APP) && cp -v System.map /boot/System.map-$(FULLVER)
	
	ln -svf $(SNAME)kernel-$(FULLVER) /boot/$(SNAME)kernel
	ln -svf System.map-$(FULLVER) /boot/System.map

	# keep the source code in $(DIR_SRC)/$(PKG_NAME)-$(FULLVER)
	cp -fal $(DIR_APP) $(DIR_SRC)/$(PKG_NAME)-$(FULLVER)

	rm -vf /lib/modules/$(KVER)/{build,source}
	ln -svf $(DIR_SRC)/$(PKG_NAME)-$(FULLVER) /lib/modules/$(KVER)/build
	ln -svf $(DIR_SRC)/$(PKG_NAME)-$(FULLVER) /lib/modules/$(KVER)/source
	-mkdir -pv /lib/modules/$(KVER)/extra
endif

	@rm -rf $(DIR_APP)
	@$(POSTBUILD)
