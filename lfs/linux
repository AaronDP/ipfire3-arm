###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = linux
VER        = 2.6.24

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DIR_APP    = $(DIR_SRC)/$(THISAPP)
CFLAGS     =
CXXFLAGS   =

TARGET     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)

FULLVER    = $(VER)-ipfire1
EXTRAVERSION = $(shell echo "$(FULLVER)" | cut -c 7-)

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE) reiser4-for-$(VER).patch

install : $(TARGET)

download :$(patsubst %,$(DIR_DL)/%,$(objects))

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)

ifeq "$(STAGE)" "toolchain"
	install -dv $(TOOLS_DIR)/include
	cd $(DIR_APP) && make mrproper
	cd $(DIR_APP) && make ARCH=i386 headers_check
	cd $(DIR_APP) && make ARCH=i386 INSTALL_HDR_PATH=dest headers_install
	cd $(DIR_APP) && cp -rv dest/include/* $(TOOLS_DIR)/include
endif

ifeq "$(STAGE)" "base"
	cd $(DIR_APP) && make mrproper
	cd $(DIR_APP) && make ARCH=i386 headers_check
	cd $(DIR_APP) && make ARCH=i386 INSTALL_HDR_PATH=dest headers_install
	cd $(DIR_APP) && cp -rv dest/include/* /usr/include
endif

ifeq "$(STAGE)" "ipfire"

	### Reiser4
	#
	cd $(DIR_APP) && patch -Np1 < $(DIR_PATCHES)/reiser4-for-$(VER).patch
	
	cd $(DIR_APP) && make mrproper

	-[ "$(TARGET_ARCH)" == "i586" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_MPENTIUMIII is not set/CONFIG_MPENTIUMII=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config
	
	-[ "$(TARGET_ARCH)" == "i486" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_M486 is not set/CONFIG_M486=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config
	
	-[ "$(TARGET_ARCH)" == "i386" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_M386 is not set/CONFIG_M386=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config
	
	-[ "$(TARGET_ARCH)" == "i486" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_M486 is not set/CONFIG_M486=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config

	-[ "$(TARGET_ARCH)" == "via-c7" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_MVIAC7 is not set/CONFIG_MVIAC7=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config
	
	-[ "$(TARGET_ARCH)" == "via-c3" ] && \
			sed 	-e "s/^CONFIG_M686=y/# CONFIG_686 is not set/" \
						-e "s/^# CONFIG_MVIAC3_2 is not set/CONFIG_MVIAC3_2=y/" \
						< $(DIR_CONF)/kernel/kernel.config > $(DIR_APP)/.config
	
	# if no $(TARGET) matched use the default
	[ ! -e "$(DIR_APP)/.config" ] && cp -f $(DIR_CONF)/kernel/kernel.config \
																				 $(DIR_APP)/.config
	
	cd $(DIR_APP) && \
		sed -i -e "s/EXTRAVERSION\ =.*/EXTRAVERSION\ =\ $(EXTRAVERSION)/" \
			Makefile
	
	cd $(DIR_APP) && make oldconfig
	
	cd $(DIR_APP) && make -j $(PARALLELISM)
	cd $(DIR_APP) && make modules_install
	
	cd $(DIR_APP) && cp -v arch/i386/boot/bzImage /boot/ipfirekernel-$(FULLVER)
	cd $(DIR_APP) && cp -v System.map /boot/System.map-$(FULLVER)
	
	ln -svf ipfirekernel-$(FULLVER) /boot/ipfirekernel
	ln -svf System.map-$(FULLVER) /boot/System.map
endif

	@rm -rf $(DIR_APP)
	@$(POSTBUILD)
