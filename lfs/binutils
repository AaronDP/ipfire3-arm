###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = binutils
VER        = 2.18

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DIR_APP    = $(DIR_SRC)/$(THISAPP)

ifeq "$(STAGE)" "toolchain"
ifeq "$(firstword $(MAKEFILE_LIST))" "$(PKG_NAME)"
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)-pass$(PASS)
else
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)-cross
endif
else
	TARGET = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)
endif

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE) $(THISAPP)-configure-1.patch \
	$(THISAPP)-uClibc-1.patch \
	$(THISAPP)-ld_makefile.patch

install : $(TARGET)

download : $(objects)

$(objects) :
	@$(LOAD)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : 
	@$(PREBUILD)
	@rm -rf $(DIR_APP) $(DIR_SRC)/binutils-build && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)
	-mkdir -v $(DIR_SRC)/binutils-build
	cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(THISAPP)-configure-1.patch

ifeq "$(STAGE)" "toolchain"
ifeq "$(firstword $(MAKEFILE_LIST))" "$(PKG_NAME)"
	#
	#	Normal build
	#

ifeq "$(PASS)" "1"
ifeq "$(MACHINE)" "$(MACHINE_REAL)"
	cd $(DIR_SRC)/binutils-build && CC="gcc -B/usr/bin/" ../$(THISAPP)/configure \
						--prefix=$(TOOLS_DIR) \
						--disable-nls \
						--disable-werror
	cd $(DIR_SRC)/binutils-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make install
	cd $(DIR_SRC)/binutils-build && make -C ld clean
	cd $(DIR_SRC)/binutils-build && make -C ld LIB_PATH=$(TOOLS_DIR)/lib
	cd $(DIR_SRC)/binutils-build && cp -v ld/ld-new $(TOOLS_DIR)/bin
else
	#
	# Cross build
	#
	cd $(DIR_SRC)/binutils-build && ../$(THISAPP)/configure \
						--prefix=$(TOOLS_DIR) \
						--build=${IFS_HOST} \
						--host=${IFS_TARGET} \
						--target=${IFS_TARGET} \
						--disable-nls \
						--enable-shared \
						--disable-multilib
	cd $(DIR_SRC)/binutils-build && make configure-host																	
	cd $(DIR_SRC)/binutils-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make install
endif
endif

ifeq "$(PASS)" "2"
	cd $(DIR_SRC)/binutils-build && ../$(THISAPP)/configure \
						--prefix=$(TOOLS_DIR) \
						--disable-nls \
						--with-lib-path=$(TOOLS_DIR)/lib
	cd $(DIR_SRC)/binutils-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make install
	
	cd $(DIR_SRC)/binutils-build && make -C ld clean
	cd $(DIR_SRC)/binutils-build && make -C ld LIB_PATH=/usr/lib:/lib
	cd $(DIR_SRC)/binutils-build && cp -v ld/ld-new $(TOOLS_DIR)/bin
endif

else
	#
	# Cross build
	#

	cd $(DIR_SRC)/binutils-build && AR=ar AS=as ../$(THISAPP)/configure \
						--prefix=$(CTOOLS_DIR) \
						--host=${IFS_HOST} \
						--target=${IFS_TARGET} \
						--with-lib-path=$(TOOLS_DIR)/lib \
						--disable-nls \
						--enable-shared \
						--disable-multilib
	cd $(DIR_SRC)/binutils-build && make configure-host
	cd $(DIR_SRC)/binutils-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make install
	
	-mkdir -p $(TOOLS_DIR)/include
	cp -fv $(DIR_APP)/include/libiberty.h $(TOOLS_DIR)/include
endif
endif

ifeq "$(STAGE)" "base"
	cd $(DIR_SRC)/binutils-build && ../$(THISAPP)/configure --prefix=/usr \
		--enable-shared
	cd $(DIR_SRC)/binutils-build && make tooldir=/usr $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make tooldir=/usr install
	
	cp -fv ../$(THISAPP)/include/libiberty.h /usr/include
endif

ifeq "$(STAGE)" "installer"
	cd $(DIR_SRC)/binutils-build && ../$(THISAPP)/configure \
						--target=$(UCLIBC_TARGET) \
						--prefix=$(UCLIBC_DIR) \
						--with-sysroot=$(UCLIBC_SYSROOT_DIR) \
						--disable-multilib \
						--disable-werror \
						--disable-nls
	cd $(DIR_SRC)/binutils-build && make $(PARALLELISMFLAGS)
	cd $(DIR_SRC)/binutils-build && make install

	for t in ar as ld strip; do \
		ln -sfv $(UCLIBC_DIR)/bin/$(UCLIBC_TARGET)-$${t} \
			$(UCLIBC_CC_CORE_STATIC_DIR)/$(UCLIBC_TARGET)/bin/$${t}; \
		ln -sfv $(UCLIBC_DIR)/bin/$(UCLIBC_TARGET)-$${t} \
			$(UCLIBC_CC_CORE_STATIC_DIR)/bin/$(UCLIBC_TARGET)-$${t}; \
	done
endif

	@rm -rf $(DIR_APP) $(DIR_SRC)/binutils-build
	@$(POSTBUILD)
