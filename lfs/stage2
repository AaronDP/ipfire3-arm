###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = stage2
VER        = LFS

THISAPP    = $(PKG_NAME)-$(VER)

TARGET     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)

###############################################################################
# Top-level Rules
###############################################################################

install : $(TARGET)

download :

###############################################################################
# Installation Details
###############################################################################

$(TARGET) :
	@$(PREBUILD)
	
	# Create directories
	-mkdir -pv /{bin,boot,etc/{opt,sysconfig},home,lib,mnt,opt}
	-mkdir -pv /{media/{floppy,cdrom},sbin,srv,var}
	-install -dv -m 0750 /root
	-install -dv -m 1777 /tmp /var/tmp
	-mkdir -pv /usr/{,local/}{bin,include,lib,sbin,src}
	-mkdir -pv /usr/{,local/}share/{doc,info,locale,man}
	-mkdir -v  /usr/{,local/}share/{misc,terminfo,zoneinfo}
	-mkdir -pv /usr/{,local/}share/man/man{1..8}
	-for dir in /usr /usr/local; do \
		ln -sfv share/{man,doc,info} $$dir; \
	done
	-mkdir -v /var/{lock,log,mail,run,spool}
	-mkdir -pv /var/{opt,cache,lib/{misc,locate},local}
	
	# Check for some important links and create them if they don't exist
	#if [ ! -e /bin/bash ]; then ln -sfn $(TOOLS_DIR)/bin/bash /bin/bash && ln -sf bash /bin/sh; fi
	#if [ ! -e /bin/cat  ]; then ln -sfn $(TOOLS_DIR)/bin/cat  /bin/cat;  fi
	#if [ ! -e /bin/echo ]; then ln -sfn $(TOOLS_DIR)/bin/echo /bin/echo; fi
	#if [ ! -e /bin/grep ]; then ln -sfn $(TOOLS_DIR)/bin/grep /bin/grep; fi
	#if [ ! -e /bin/pwd  ]; then ln -sfn $(TOOLS_DIR)/bin/pwd  /bin/pwd;  fi
	#if [ ! -e /bin/stty ]; then ln -sfn $(TOOLS_DIR)/bin/stty /bin/stty; fi
	
	#if [ ! -e /usr/bin/perl ]; then ln -sfn $(TOOLS_DIR)/bin/perl /usr/bin/perl; fi
	
	#[ ! -e /lib/libgcc_s.so.1 ] && ln -sfn $(TOOLS_DIR)/lib/libgcc_s.so{,.1} /usr/lib/
	#[ ! -e /lib/libstdc++.so.6 ] && ln -sfn $(TOOLS_DIR)/lib/libstdc++.so{,.6} /usr/lib/
	
	# Creating an empty mtab
	touch /etc/mtab		#ln -sf /proc/mounts /etc/mtab
	
	# This trick is necessary in order to create two devices in the target /dev
	# rather than in the host /dev
	mkdir -p /dev1
	mount --move /dev /dev1
	
	# Make /dev/null and /dev/console
	cd /dev && rm -f null console
	cd /dev && mknod -m 0666 null c 1 3
	cd /dev && mknod -m 0600 console c 5 1

	# Now move the target /dev to point back to the host /dev
	mount --move /dev1 /dev
	rm -fr /dev1
	
	# Config files
	for i in $(DIR_SRC)/config/etc/*; do \
		[ -f $$i ] && cp $$i /etc; \
	done

ifeq "$(EMB)" "1"
	# Enable serial on console 7
	sed -e "s/^#7/7/" -i /etc/inittab
endif
	
	ln -sf /proc/mounts /etc/mtab
	
	echo "$(NAME) v$(VERSION) for $(MACHINE) - $(SLOGAN) (\l)" > /etc/issue
	echo "===============================" >> /etc/issue
	echo "\n running on \s \r \m"          >> /etc/issue
	
	touch /var/run/utmp /var/log/{btmp,lastlog,wtmp}
	#chgrp -v utmp /var/run/utmp /var/log/lastlog
	chmod -v 664 /var/run/utmp /var/log/lastlog
	
	# Bash startup files
	install --directory --mode=0755 --owner=root --group=root /etc/profile.d
	for i in $(DIR_SRC)/config/profile.d/*; do \
	    [ -f $$i ] && cp $$i /etc/profile.d; \
	done
	
	# Scripts
	for i in `find $(DIR_SRC)/src/scripts -maxdepth 1 -type f`; do \
	    sed "s+CONFIG_ROOT+$(CONFIG_ROOT)+g" $$i > /usr/local/bin/`basename $$i`; \
	    chmod 755 /usr/local/bin/`basename $$i`; \
	done
	
	# Nobody user
	-mkdir -p /home/nobody
	chown -R nobody:nobody /home/nobody
	
	@$(POSTBUILD)
