#!/bin/sh
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2008  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

## Set the defaults
HOSTNAME=ipfire.localdomain

. /etc/functions


################################################################################
# Mounting early filesystems                                                   #
################################################################################

message="Mounting kernel-based file systems:"

if ! mountpoint /proc > /dev/null; then
    message="${message}${INFO} /proc${NORMAL}"
    mount -n /proc || failed=1
fi

if ! mountpoint /sys > /dev/null; then
    message="${message}${INFO} /sys${NORMAL}"
    mount -n /sys || failed=1
fi

(exit ${failed})
evaluate_retval standard


################################################################################
# Setting kernel parameters                                                    #
################################################################################

message="Silencing kernel..."
echo >/proc/sys/kernel/printk "1 4 1 7"
evaluate_retval standard

message="Disabling screen blanking..."
echo -n -e "\033[9;0]"
evaluate_retval standard


################################################################################
# Starting udev daemon                                                         #
################################################################################

message="Mounting /dev"
mount -n -t tmpfs tmpfs /dev -o mode=755
evaluate_retval standard

message="Populating /dev with device nodes..."
echo > /proc/sys/kernel/hotplug

cp -a /lib/udev/devices/* /dev
/sbin/udevd --daemon
/sbin/udevadm trigger
/sbin/udevadm settle
evaluate_retval standard


################################################################################
# Setting up local networking                                                  #
################################################################################

message="Bringing up the loopback interface..."
ip addr add 127.0.0.1/8 label lo dev lo
ip link set lo up
evaluate_retval standard

message="Setting hostname to ${HOSTNAME}..."
hostname "${HOSTNAME}"
evaluate_retval standard


################################################################################
# Starting syslog daemon                                                       #
################################################################################

message="system log daemon..."
start_daemon /sbin/syslogd -O /dev/tty4
evaluate_retval start


################################################################################
# Starting dbus daemon                                                         #
################################################################################

message="Starting the D-Bus Messagebus Daemon..."
/usr/bin/dbus-uuidgen --ensure
/usr/bin/dbus-daemon --system
evaluate_retval standard


################################################################################
# Starting hal daemon                                                          #
################################################################################

/usr/sbin/hald --use-syslog &
log_success_msg "Starting the HAL Daemon..."


################################################################################
# Detecting hardware                                                           #
################################################################################

# net and storage modules
MODULES="mii pcnet32 mptbase mptscsih scsi_transport_spi libata ata_piix"

# USB modules
MODULES="$MODULES uhci-hcd ehci-hcd ohci-hcd sd_mod sr_mod"
MODULES="$MODULES usb-storage usbhid"

# filesystem modules
MODULES="$MODULES ext2 ext3 reiserfs reiser4 xfs vfat"

for MODULE in $MODULES; do
	if grep -Eqe "^$MODULE " /proc/modules; then
		continue
	fi
	modprobe -q $MODULE
done

log_success_msg "Running hardware detection..."

sleep 3 # Wait a little bit for the loaded modules/devices

################################################################################
# Now check what mode= was passed to the kernel                                #
################################################################################
for i in $(cat /proc/cmdline); do
	case $i in
		mode=*)
			STARTUP_MODE=${i#mode=}
			;;
	esac
done

case $STARTUP_MODE in
	install)
		:
		;;
	rescue)
		sed -i "s,/sbin/pomona,/bin/bash,g" /etc/inittab
		;;
esac


################################################################################
# Networking                                                                   #
################################################################################

INTERFACES=""
NETWORK=off
for i in $(/usr/bin/seq 0 9); do
	link_status=`ip link show eth${i} 2> /dev/null`
	if [ -n "${link_status}" ]; then
		INTERFACES="${INTERFACES} eth${i}"
	fi
done

for i in ${INTERFACES}; do
	boot_mesg "Starting network (dhcp) on ${i}..."
	ip link set ${i} up && \
		udhcpc -Sn -i ${i} >/dev/null 2>&1 && \
		echo_ok && \
		NETWORK=on && \
		break
	
	ip link set ${i} down
	echo_failure
done

if [ "$NETWORK" == "on" ]; then
	#boot_mesg "Starting telnetd..."
	#telnetd
	#evaluate_retval
	echo -n
fi


################################################################################
# Running the machines init                                                    #
################################################################################

exec init
