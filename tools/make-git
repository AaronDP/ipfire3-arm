#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
# A small helper to make the git functions comfortable                        #
#                                                                             #
###############################################################################
###############################################################################
#
# Set the environment
#
###############################################################################

[ -z $GIT_USER ] && exiterror "You have to setup GIT_USER first."

GIT_URL="ssh://${GIT_USER}@git.ipfire.org/pub/git/ipfire-3.x"

if [ -z $EDITOR ]; then
	for i in nano emacs vi; do
		EDITOR=$(which $i 2>/dev/null)
		if ! [ -z $EDITOR ]; then
			export EDITOR=$EDITOR
			break
		fi
	done
	[ -z $EDITOR ] && exiterror "You should have installed an editor."
fi

###############################################################################
#
# A small helper to make the git functions comfortable
#
###############################################################################

git_pull() {
	git pull
}

git_push() {
	git push ${GIT_URL} master
}

git_commit() {
	git commit $*
	
	[ "$?" -eq "0" ] || exiterror "git commit $* failed."
	
	echo -e "${BOLD}Do you want to push, too? [y/N]${NORMAL}"
	read
	[ -z $REPLY ] && exit 0
	for i in y Y j J; do
		if [ "$i" == "$REPLY" ]; then
			git_push
			exit $?
		fi
	done
	exiterror "\"$REPLY\" is not a valid answer."
}

git_diff(){
	echo -ne "Make a local diff to last revision"
	git diff HEAD > ipfire-diff-$(date +'%Y-%m-%d-%H:%M').diff
	evaluate 1
	echo "Diff was successfully saved to ipfire-diff-$(date +'%Y-%m-%d-%H:%M').diff"
	git diff --stat
}

git_log() {
	echo -n "Updateing changelog from repository..."
	
	[ -z $GIT_TAG ]  || LAST_TAG=$GIT_TAG
	[ -z $LAST_TAG ] || EXT="$LAST_TAG..HEAD"
	
	git log --pretty=short --no-color $EXT > $BASEDIR/doc/ChangeLog
	
	beautify message DONE
}

git_export() {
	git archive HEAD | gzip -9 > ${SNAME}-${VERSION}.tar.gz
}
