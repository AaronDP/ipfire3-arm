#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2008  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

function ccache_disable() {
	CCACHE=off
}

function ccache_enable() {
	unset CCACHE
}

function icecc_toolchain() {
	local chroot
	local file

	while [ $# -gt 0 ]; do
		case "${1}" in
			--chroot)
				chroot=1
				;;
			*)
				file=${1}
				;;			
		esac
		shift
	done

	if [ -e "${file}" ]; then
		return
	fi
	
	if [ "${chroot}" = "1" ]; then
		chroot_cmd ${TOOLS_DIR}/usr/lib/icecc/icecc-create-env ${file} \
			--gcc=${ICECC_CC} --gxx=${ICECC_CXX} --as=${ICECC_AS}
	else
		${TOOLS_DIR}/usr/lib/icecc/icecc-create-env ${file} \
			--gcc=${ICECC_CC} --gxx=${ICECC_CXX} --as=${ICECC_AS}
	fi

	ICECC_VERSION=${file}
}

function iceccd_start() {
	if [ -n "$(pidof iceccd)" ]; then
		return
	fi
	${TOOLS_DIR}/usr/sbin/iceccd -vvv -d -s ${ICECC_SCHEDULER} -m ${ICECC_JOBS-5}
}

function iceccd_stop() {
	killall iceccd 2>/dev/null
}

function icecc_disable() {
	ICECC=off
}

function icecc_enable() {
	unset ICECC
	iceccd_start
}

function icecc_use() {
	local stage=${1}
	local options
	local file=${TOOLS_DIR}/${SNAME}-${TOOLCHAINVERSION}-${stage}.tar.gz

	case "${stage}" in
		toolchain)
			ICECC_AS=${TOOLS_DIR}/bin/as
			ICECC_CC=${TOOLS_DIR}/bin/gcc
			ICECC_CXX=${TOOLS_DIR}/bin/g++
			;;
		base)
			ICECC_AS=/usr/bin/as
			ICECC_CC=/usr/bin/gcc
			ICECC_CXX=/usr/bin/g++
			options=--chroot
			;;
		host)
			ICECC_AS=/usr/bin/as
			ICECC_CC=/usr/bin/gcc
			ICECC_CXX=/usr/bin/g++
			file=${TOOLS_DIR}/${SNAME}-${TOOLCHAINVERSION}-${HOSTNAME}.tar.gz
			;;
	esac
	icecc_toolchain ${options} ${file} >/dev/null
}
