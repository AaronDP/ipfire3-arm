#!/bin/bash

BOOTLOADER_DIR=/usr/src/src/bootloader
IMAGES_DIR=/usr/src/images

ISO_FILENAME=${DISTRO_SNAME}-${DISTRO_VERSION}-${TARGET}.iso

. $(dirname ${0})/common-functions

function find_latest_kernel_release() {
	local i
	for i in /lib/modules/*; do
		i=$(basename ${i})
	done

	echo "${i}"
}

KERNEL_RELEASE=$(find_latest_kernel_release)

function installer_image() {
	local file=${1}
	local dir=${2}

	cd ${dir} && mksquashfs * ${file} -no-progress -e boot
}

function install_config() {
	local src=${1}
	local dest=${2}

	sed \
		-e "s/@NAME@/${DISTRO_NAME}/g" \
		-e "s/@SNAME@/${DISTRO_SNAME}/g" \
		-e "s/@VERSION@/${DISTRO_VERSION}/g" \
		-e "s/@SLOGAN@/${DISTRO_SLOGAN}/g" \
		-e "s/@KERNEL@/${KERNEL_RELEASE}/g" \
	< ${src} > ${dest}
}

function install_isolinux() {
	local dest=${1}

	mkdir -p ${dest} 2>/dev/null

	local i
	for i in isolinux.bin vesamenu.c32; do
		cp -f /usr/share/syslinux/${i} ${dest}/
	done

	install_config ${BOOTLOADER_DIR}/installer.conf ${dest}/isolinux.cfg
	cp -f ${BOOTLOADER_DIR}/{*.msg,splash.*} ${dest}/

	install_kernel ${dest}
}

function install_kernel() {
	local dest=${1}

	mkdir -p ${dest} 2>/dev/null

	local file
	for file in vmlinuz-${KERNEL_RELEASE} initrd-${KERNEL_RELEASE}.img; do
		cp -f /boot/${file} ${dest}/${file}
	done
}

case "${1}" in
	iso)
		log DEBUG "Creating ISO image..."

		ISO_DIR=$(mktemp -d)
		ISO_FILE=$(mktemp)

		# Copy installer image to ISO
		installer_image ${ISO_DIR}/installer.sfs /installer

		# Install bootloader
		install_isolinux ${ISO_DIR}/isolinux

		# "Copy" packages
		mv /packages ${ISO_DIR}/Packages

		cd ${ISO_DIR} && \
			mkisofs -J -r -V "${DISTRO_NAME}_${DISTRO_VERSION}" \
				-b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot \
				-boot-load-size 4 -boot-info-table . > ${ISO_FILE}

		cat ${ISO_FILE} > ${IMAGES_DIR}/${ISO_FILENAME}
		;;

	*)
		log ERROR "Unknown type of image: ${1}"
		exit 1
		;;
esac
