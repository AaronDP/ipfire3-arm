#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2008  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

ccache_stats() {
	if [ -e $BASEDIR/ccache ]; then
		PATH=$PATH:build_${MACHINE}/tools_${MACHINE}/usr/bin \
		CCACHE_DIR=${BASEDIR}/ccache \
		ccache -s
	else
		echo -n "You can't access the statistics if you didn't run ./make.sh build"
		beautify message FAIL
	fi
}

distcc_mon() {

	INTERVAL=1 # in seconds

	if [ -e $BASEDIR/distcc ]; then
		while sleep $INTERVAL; do
			clear
			PATH=$PATH:build_${MACHINE}/tools_${MACHINE}/usr/bin \
			DISTCC_DIR=${BASEDIR}/distcc \
			distccmon-text
		done
	else
		echo -n "You can't access the statistics if you didn't run ./make.sh build"
		beautify message FAIL
	fi
}

distccd_start() {
	echo -n "Running distcc daemon"
	TOOLS_DIR=$TOOLS_DIR $BASEDIR/tools/make-compilers &
	if [ "$?" -eq "0" ]; then
		beautify message DONE
	else
		beautify message FAIL
	fi
}

distccd_stop() {
	echo -n "Stopping distcc daemon"
	killall distccd
	if [ "$?" -eq "0" ]; then
		beautify message DONE
	else
		beautify message FAIL
	fi
}

distccd_restart() {
	distccd_stop
	distccd_start
}

if [ "$(basename $0)" == "make-compilers" ]; then
	# Exit, when distccd is already running
	pidof distccd >/dev/null && exit 1

	# Run distccd
	DISTCCD_PATH=$TOOLS_DIR/bin:$(echo $TOOLS_DIR/libexec/gcc/*-pc-linux-gnu/*/) \
		$TOOLS_DIR/usr/bin/distccd --daemon --allow 0.0.0.0/0 \
		--user nobody --nice 10 --jobs 4 &>/dev/null

	# When $TOOLS_DIR is not available (esp. gcc) --> exit
	while pidof distccd >/dev/null && [ -x $TOOLS_DIR/bin/gcc ]; do
		sleep 10
	done

	distccd_stop
fi
