#!/bin/sh
########################################################################
# Begin $NETWORK_DEVICES/services/ethernet
#
# Description : Ethernet Script
#
# Authors     : Michael Tremer - michael.tremer@ipfire.org
#
# Version     : 00.00
#
# Notes       : This script adds ethernet support.
#
########################################################################

. /lib/lsb/init-functions
. /lib/network/functions

HOOK_NAME=ethernet
HOOK_TYPE=port

function check_config() {
	: # XXX TODO
}

function port_name() {
	echo ${zone}s+
}

function do_up() {
	: # Do nothing
}

function do_down() {
	: # Do nothing
}

function do_attach() {
	device_rename $(get_device ${port}) $(port_name)
	zone_add_port ${zone} $(get_device_by_mac ${port})
}

function do_detach() {
	zone_del_port ${zone} $(get_device_by_mac ${port})
	device_rename $(get_device_by_mac ${port}) ${COMMON_DEVICE}
}

function do_status() {
	device_is_up ${port}
	RET=$?
	if [ $RET -eq 0 ]; then
		log_success_msg "Port $(port_name) is up"
	else
		log_failure_msg "Port $(port_name) is down"
	fi
	return $RET
	# TODO: Check if device is attached to a bridge.
}

# First, parse the command line

while [ $# -gt 0 ]; do
	case "${1}" in
		--port=*)
			port=$(macify ${1#--port=})
			;;
		--config=*)
			. ${1#--config=}
			check_config
			;;
		--zone=*)
			zone=${1#--zone=}
			;;
		-*)
			log_failure_msg "Unrecognized option: ${1}"
			exit ${EXIT_ERROR}
			;;
		*)
			action=${1}
			shift
			break
			;;
	esac
	shift
done

case "${action}" in
	help)
		;;

	info)
		echo "HOOK_NAME=${HOOK_NAME}"
		echo "HOOK_TYPE=${HOOK_TYPE}"
		;;

	up)
		do_up
	;;

	down)
		do_down
	;;

	add)
		cat <<EOF > ${CONFIG_PORTS}/${port}/ethernet
HOOK=ethernet
EOF
		ln -sf ${CONFIG_PORTS}/${port}/ethernet \
			${CONFIG_ZONES}/${zone}/port-${port}-ethernet
	;;

	remove)
		do_detach
		#do_down
		rm -f \
			${CONFIG_ZONES}/${zone}/port-${port}-ethernet \
			${CONFIG_PORTS}/${port}/ethernet
	;;

	attach)
		do_up
		do_attach
	;;

	detach)
		do_detach
	;;

	status)
		do_status
		exit ${?}
	;;

	*)
		echo "Usage: ${0} [interface] {up|down|add|remove|attach|detach|status}"
		exit 1
	;;
esac

# End $NETWORK_DEVICES/services/ethernet
