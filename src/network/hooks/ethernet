#!/bin/sh
########################################################################
# Begin $NETWORK_DEVICES/services/ethernet
#
# Description : Ethernet Script
#
# Authors     : Michael Tremer - michael.tremer@ipfire.org
#
# Version     : 00.00
#
# Notes       : This script adds ethernet support.
#
########################################################################

. /lib/network/hook-header

HOOK_NAME=ethernet
HOOK_TYPE=port

function port_name() {
	echo ${zone}s+
}

function do_up() {
	device_is_up ${port} || ip link set $(devicify ${port}) up
}

function do_down() {
	: # TODO
	# Check if there are depending devices (like vlans, etc)
	# If not, then pull down the device.
}

function do_attach() {
	if zone_has_device_attached ${zone} $(get_device ${port}); then
		# Device is already attached to the bridge
		return 0
	fi
	message="Attaching ethernet port ${port}..."
	device_rename $(get_device ${port}) $(port_name)
	zone_add_port ${zone} $(get_device_by_mac ${port})
	evaluate_retval
}

function do_detach() {
	if zone_has_device_attached ${zone} $(get_device ${port}); then
		message="Detatching ethernet port ${port}..."
		zone_del_port ${zone} $(get_device_by_mac ${port})
		device_rename $(get_device_by_mac ${port}) ${COMMON_DEVICE}
		evaluate_retval
	fi
}

function do_status() {
	device_is_up ${port}
	RET=$?
	if [ $RET -eq 0 ]; then
		log_success_msg "Port $(port_name) is up"
	else
		log_failure_msg "Port $(port_name) is down"
	fi
	return $RET
	# TODO: Check if device is attached to a bridge.
}

case "${action}" in
	help)
		echo -e "${BOLD}Hook (${HOOK_NAME}) help:"
		echo
		echo -e "    ${BOLD}Summary:${NORMAL}"
		echo    "        The ethernet-hook controls connection via ethernet."
		echo    "        You will need this to access your local lan."
		echo
		echo -e "    ${BOLD}Usage:${NORMAL}"
		#echo    "        --config=<FILE>"
		#echo    "            Includes a config file."
		#echo    "            Example: --config=/etc/sysconfig/network/green0/port-00:11:22:33:44:55"
		#echo    "        --port=<MAC or Name>"
		#echo    "            Passes the port to the script."
		#echo    "            Example: --port=black0 or --port=00:11:22:33:44:55"
		#echo    "        --zone=<zone>"
		#echo    "            Passes the zone to the script."
		#echo    "            Example: --zone=green0"
		#echo
		#echo -e "    ${BOLD}Commands:${NORMAL}"
		#echo
		echo     "        This hook only needs the name of the network device"
		echo     "        that should be attached to the zone."
		echo     "        The device identifier can either be a mac address or"
		echo     "        a device name."
		echo
		echo     "            Example: network zone addport green0 ethernet black0"
		echo     "                     network zone addport green0 ethernet 00:11:22:33:44:55"
		echo
		;;

	info)
		echo "HOOK_NAME=${HOOK_NAME}"
		echo "HOOK_TYPE=${HOOK_TYPE}"
		;;

	up)
		check_config port zone
		do_up
		;;

	down)
		check_config port zone
		do_down
		;;

	add)
		cat <<EOF > ${CONFIG_PORTS}/${port}/ethernet
HOOK=ethernet
EOF
		ln -sf ${CONFIG_PORTS}/${port}/ethernet \
			${CONFIG_ZONES}/${zone}/port-${port}-ethernet
		;;

	remove)
		check_config port zone
		do_detach
		do_down
		rm -f \
			${CONFIG_ZONES}/${zone}/port-${port}-ethernet \
			${CONFIG_PORTS}/${port}/ethernet
		;;

	attach)
		check_config port zone
		do_up
		do_attach
		;;

	detach)
		check_config port zone
		do_detach
		do_down
		;;

	status)
		check_config port zone
		do_status
		exit ${?}
		;;

	*)
		echo "Usage: ${0} [interface] {up|down|add|remove|attach|detach|status}"
		exit 1
		;;
esac

# End $NETWORK_DEVICES/services/ethernet
