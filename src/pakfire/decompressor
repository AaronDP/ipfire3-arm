#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007, 2008, 2009 Michael Tremer & Christian Schmidt           #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

FILES=
ROOT=/

while [ $# -gt 0 ]; do
	case "$1" in
		--root=*)
			ROOT=${1#--root=}
			;;
		*.ipk)
			file=$1
			[ ${file:0:1} != / ] && file="$(pwd)/$file"
			if [ -e "$file" ]; then
				FILES="$FILES $file"
			else
				echo "File does not exist: $file" >&2
				exit 1
			fi
			;;
	esac
	shift
done

if [ "$ROOT" != "/" ]; then
	[ -d "$ROOT" ] || mkdir -p $ROOT
	cd $ROOT
	if [ "$(pwd)" != "$ROOT" ]; then
		echo "Could not change to root: $ROOT" >&2
		exit 1
	fi
fi

# Sort all packages
FILES=$(for i in $FILES; do echo $i; done | sort -u)

for file in $FILES; do
	echo "Extracting $file..."
	cpio --extract --quiet --to-stdout data.img < $file | lzmadec | \
		cpio -diu --no-absolute-filenames --quiet
done
