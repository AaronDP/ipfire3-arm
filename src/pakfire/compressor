#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007, 2008, 2009 Michael Tremer & Christian Schmidt           #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

PACKAGE_VERSION="0"

function cleanup() {
	echo " Cleaning up..."
	for i in $ARCHIEVE $CONTROL $INFO $TMP_DIR; do
		rm -rf ${i}
	done
}

while [ $# -gt 0 ]; do
	case "$1" in
		*)
			if [ -z "$PKG_TARGET" ]; then
				PKG_TARGET=$1
			else
				if [ ! -e "$1" ]; then
					echo "Rootfile do not exist: $1" >&2
					exit 1
				fi
				ROOTFILES="$ROOTFILES $1"
			fi
			;;
	esac
	shift
done

if [ -z "$TARGET" ]; then
	echo "TARGET is not set. Cannot continue." >&2
	exit 1
fi

echo "Packaging $PKG_TARGET..."

if [ -e "/packages/$PKG_TARGET" ]; then
	echo "Skip."
	exit 0
fi

ARCHIEVE=$(mktemp)
CONTROL=$(mktemp)
INFO=$(mktemp)
TMP_DIR=$(mktemp -d)

echo " Collecting files..."
for rootfile in $ROOTFILES; do
	ERROR=$(cd / && \
			grep -v "^#" < $rootfile | \
			sed -e "s/KVER/$KVER/g" \
				-e "s/IFS_TARGET/$IFS_TARGET/g" | \
			cpio -pd --quiet $TMP_DIR 2>&1)
	if [ -n "${ERROR}" ]; then
		echo -e "When copying the files, an error occoured:\n\n${ERROR}" >&2
		cleanup
		exit 1
	fi
done

echo " Running quality agent hooks..."
for hook in $(dirname $0)/compressor.d/*; do
	[ -x "${hook}" ] || continue
	${hook} $TMP_DIR
	if [ "$?" != "0" ]; then
		cleanup
		exit 1
	fi
done

cd $TMP_DIR

echo " Writing data.img..."
find . | cpio -o -H newc --quiet | lzma -cz - > $ARCHIEVE

echo " Writing meta-data..."
cat <<EOF >$INFO
### $NAME package

PACKAGE_VERSION="$PACKAGE_VERSION"

BUILD_HOST="$(cat /proc/sys/kernel/hostname)"
BUILD_DATE="$(date -u)"

# Version info
PKG_NAME="$PKG_NAME"
PKG_VER="$PKG_VER"
PKG_REL="$PKG_REL"
PKG_GROUP="$PKG_GROUP"

PKG_MAINTAINER="$PKG_MAINTAINER"
PKG_LICENSE="$PKG_LICENSE"

PKG_SUMMARY="$PKG_SHORT"
PKG_DESCRIPTION="$PKG_LONG"

# Dependency info
PKG_DEPS="$PKG_DEPS"
PKG_BUILD_DEPS="$PKG_BUILD_DEPS"

PKG_DATA_SHA1="$(sha1sum $ARCHIEVE | awk '{ print $1 }')"

###
EOF

echo " Writing control file..."
cat <<EOF >$CONTROL
#!/bin/sh

function prein() {
$CONTROL_PREIN
}

function preun() {
$CONTROL_PREUN
}

function postin() {
$CONTROL_POSTIN
}

function postun() {
$CONTROL_POSTUN
}

###
EOF

rm -rf $TMP_DIR/*

cat $ARCHIEVE > $TMP_DIR/data.img
cat $CONTROL  > $TMP_DIR/control
cat $INFO     > $TMP_DIR/info

echo " Packaging archive..."
find . | cpio -o -H newc --quiet > $ARCHIEVE

cat $ARCHIEVE > /packages/$PKG_TARGET

cleanup
