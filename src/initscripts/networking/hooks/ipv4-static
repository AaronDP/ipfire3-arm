#!/bin/sh
########################################################################
# Begin $NETWORK_DEVICES/services/ipv4-static
#
# Description : IPV4 Static Boot Script
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
#
# Version     : 00.00
#
# Notes       :
#
########################################################################

. /lib/lsb/init-functions
. /etc/init.d/networking/functions
[ -n "${CONFIG}" ] && . ${CONFIG}

zone=$2

function check_config() {
	if [ -z "${IP}" ]; then
		log_failure_msg "IP variable missing, cannot continue."
		exit 1
	fi
	
	if [ -z "${PREFIX}" -a -z "${PEER}" ]; then
		log_warning_msg "PREFIX variable missing, assuming 24."
		PREFIX=24
		args="${args} ${IP}/${PREFIX}"
	elif [ -n "${PREFIX}" -a -n "${PEER}" ]; then
		log_failure_msg "PREFIX and PEER both specified, cannot continue."
		exit 1
	elif [ -n "${PREFIX}" ]; then
		args="${args} ${IP}/${PREFIX}"
	elif [ -n "${PEER}" ]; then
		args="${args} ${IP} peer ${PEER}"
	fi
	
	if [ -n "${BROADCAST}" ]; then
		args="${args} broadcast ${BROADCAST}"
	fi
	
	if [ -n "${SOURCE}" ]; then
		args="${args} src ${SOURCE}"
	fi
}

case "${1}" in
	status)
		# XXX Is there a better way?
		ip route get ${IP} | grep -q ^local
		exit $?
		;;

	pre-up)
		;;

	post-up)
		check_config
		MESSAGE="Adding IPv4 address ${IP} to zone ${zone} interface..."
		ip addr add ${args} dev ${zone}
		evaluate_retval
	
		if [ -n "${GATEWAY}" ]; then
			if ip route | grep -q default; then
				log_warning_msg "Gateway already setup; skipping." ${WARNING}
			else
				MESSAGE="Setting up default gateway..."
				ip route add default via ${GATEWAY} dev ${zone}
				evaluate_retval
			 fi
		fi
	;;

	pre-down)
		check_config
		if [ -n "${GATEWAY}" ];	then
			MESSAGE="Removing default gateway..."
			ip route del default
			evaluate_retval
		fi
	
		MESSAGE="Removing IPv4 address ${IP} from zone ${zone}..."
		ip addr del ${args} dev ${zone}
		evaluate_retval
		;;

	post-down)
		;;

	config)
		shift 2
		while [ $# -gt 0 ]; do
			case "$1" in
				--ip=)
					IP=${2#--ip=}
					;;
				--prefix=)
					PREFIX=${2#--prefix=}
					;;
				--peer=)
					PEER=${2#--peer=}
					;;
				--broadcast=)
					BROADCAST=${2#--broadcast=}
					;;
				--source=)
					SOURCE=${2#--source=}
					;;
				--gateway=)
					GATEWAY=${2#--gateway=}
					;;
				*)
					echo "Unknown option: $1" >&2
					exit 1
					;;
			esac
			shift
		done
		check_config
		cat << EOF >> ${CONFIG_ZONES}/${zone}/ipv4-static_$IP
HOOK=ipv4-static
IP=$IP
PREFIX=$PREFIX
PEER=$PEER
BROADCAST=$BROADCAST
SOURCE=$SOURCE
GATEWAY=$GATEWAY
EOF
		exit $?
		;;
	
	*)
		echo "Usage: ${0} {pre-up|post-up|pre-down|post-down|config} [interface]"
		exit 1
	;;
esac

# End $NETWORK_DEVICES/services/ipv4-static
