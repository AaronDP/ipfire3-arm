###############################################################################
# IPFire.org    - An Open Source Firewall Solution                            #
# Copyright (C) - IPFire Development Team <info@ipfire.org>                   #
###############################################################################

# XXX man pages are missing
# XXX initscripts for daemons are missing

name       = icecream
version    = 0.9.6
release    = 3

maintainer = Michael Tremer <michael.tremer@ipfire.org>
groups     = Development/Compilers
url        = http://en.opensuse.org/Icecream
license    = GPLv2+
summary    = Distributed compiler.


description
	Icecream is a distributed compile system. It allows parallel compiling by \
	distributing the compile jobs to several nodes of a compile network running the \
	icecc daemon. The icecc scheduler routes the jobs and provides status and \
	statistics information to the icecc monitor. Each compile node can accept one \
	or more compile jobs depending on the number of processors and the settings of \
	the daemon. Link jobs and other jobs which cannot be distributed are executed \
	locally on the node where the compilation is started.
end

source_dl  =
sources    = icecc-%{version}.tar.bz2

build
	requires
		gcc-c++
	end

	DIR_APP = %{DIR_SRC}/icecc-%{version}

	configure_options += \
		--disable-static \
		--enable-shared

	install_cmds
		ICECREAM_TARGET_PLATFORM=$(echo %{DISTRO_MACHINE} | sed -e "s/-gnu//g")

		mkdir -pv %{BUILDROOT}/usr/lib/icecc/bin
		for i in gcc g++ cc c++; do
			ln -svf ../../../bin/icecc %{BUILDROOT}/usr/lib/icecc/bin/${i}
			ln -svf ../../../bin/icecc %{BUILDROOT}/usr/lib/icecc/bin/%{ICECREAM_TARGET_PLATFORM}-${i}
		done
		sed -e 's|^#!.*|#!/bin/bash|' -i %{BUILDROOT}/usr/lib/icecc/icecc-create-env

		mkdir -pv %{BUILDROOT}/etc/profile.d
		sed -e "s|@LIBDIR@|/usr/lib|g" \
			< %{DIR_SOURCE}/icecream.sh > %{BUILDROOT}/etc/profile.d/icecream.sh

		# create default working dir
		mkdir -pv %{BUILDROOT}/var/cache/icecream
	end
end

packages
	package %{name}
		requires = gcc-c++ /usr/bin/ldd
	end
	
	package %{name}-devel
		template DEVEL
	end
end
