###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007, 2008, 2009 Michael Tremer & Christian Schmidt           #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

.SECONDEXPANSION:

include $(PKGROOT)/gmsl

ifeq "$(CHROOT)" "1"
	BASEDIR = /usr/src
endif

THISAPP    = $(PKG_NAME)-$(PKG_VER)

DIR_APP = $(DIR_SRC)/$(THISAPP)
DIR_DL  = $(BASEDIR)/cache/tarballs
DIR_PATCHES = $(DIR_DL)/../patches
DIR_SRC = $(ROOT)/usr/src
DIR_TMP = /tmp
DIR_SOURCE = $(CURDIR)
DIR_PACKAGES = /usr/src/packages
DIR_TOOLS = $(BASEDIR)/tools
DIR_LOGS = $(BASEDIR)/logs

BUILD_HOST ?= $(shell cat /proc/sys/kernel/hostname)

VPATH = $(DIR_DL):$(DIR_PATCHES)

PKG_OBJECTS = $(PKG_TARBALL)
OBJECTS = $(PKG_OBJECTS) $(PKG_PATCHES)

PKG_NAME_REAL = $(notdir $(CURDIR))
PKG_PACKAGES = $(PKG_NAME_REAL)
PKG_PACKAGES_FILES = $(foreach package,$(PKG_PACKAGES),$(call DO_PACKAGE_FILENAME,$(package)))

DO_PACKAGE_FILENAME = $(1)$(PKG_SUFFIX)
PKG_SUFFIX = -$(PKG_VER)-$(DISTRO_SNAME)$(DISTRO_EPOCH)-$(PKG_REL).ipk

DO_EXTRACT = $(DIR_TOOLS)/extractor
DO_PATCHES = cd $(DIR_APP) && $(DIR_TOOLS)/patch $(foreach patch,$(PKG_PATCHES),$(DIR_PATCHES)/$(patch))
DO_QUALITY_AGENT = $(DIR_TOOLS)/quality-agent

PKG_DESCRIPTION_$(PKG_NAME_REAL)-devel = Development files of $(THISAPP).

define PKG_FILES_$(PKG_NAME_REAL)-devel
	/usr/include
	*/lib/*.so
endef

PKG_BUILD_DEPS += glibc gcc

CONFIGURE_ARCH = --build=$(TARGET) --host=$(TARGET)

ifeq "$(TARGET_MACHINE)" "x86_64"
	LINKER = /lib64/ld-linux-x86-64.so.2
else
	LINKER = /lib/ld-linux.so.2
endif

STAGE_PACKAGE_TARGETS = $(call reverse,$(PKG_PACKAGES_FILES))
STAGE_DONE = $(ROOT)/.done

export CFLAGS CXXFLAGS BUILD_HOST

export PKG_NAME PKG_VER PKG_REL PKG_MAINTAINER PKG_GROUP PKG_URL PKG_LICENSE
export PKG_SUMMARY PKG_DESCRIPTION=$(strip $(PKG_DESCRIPTION))
export PKG_DEPS PKG_BUILD_DEPS

export CONTROL_PREIN CONTROL_PREUN CONTROL_POSTIN CONTROL_POSTUN

define DO_FILELIST
	@echo "# Filelist dump"
	@cd $(BUILDROOT) && find -ls
endef

define DO_PREPARE
	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Preparation started"
	@echo "#####################################################################"

	$(STAGE_PREPARE)

	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Preparation finished"
	@echo "#####################################################################"
endef

define DO_BUILD
	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Build started"
	@echo "#####################################################################"

	$(STAGE_BUILD)

	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Build finished"
	@echo "#####################################################################"
endef

define DO_INSTALL
	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Install started"
	@echo "#####################################################################"

	$(STAGE_INSTALL)

	@echo "#####################################################################"
	@echo "# $(PKG_NAME) - Install finished"
	@echo "#####################################################################"

	$(if $(TOOLCHAIN),,$(DO_QUALITY_AGENT))

	$(if $(TOOLCHAIN),,$(DO_FILELIST))
endef

define STAGE_PREPARE
	$(if $(PKG_TARBALL),cd $(DIR_SRC) && $(DO_EXTRACT) $(DIR_DL)/$(PKG_TARBALL))

	$(if $(PKG_PATCHES),$(DO_PATCHES))

	$(STAGE_PREPARE_CMDS)
endef

define STAGE_BUILD
	cd $(DIR_APP) && \
		./configure \
			$(CONFIGURE_ARCH) \
			--prefix=/usr

	cd $(DIR_APP) && make $(PARALLELISMFLAGS)
endef

define STAGE_INSTALL
	cd $(DIR_APP) && make install $(if $(TOOLCHAIN),,DESTDIR=$(BUILDROOT))
endef

.PHONY: info
info:
	@echo "PKG_BUILD_DEPENDENCIES=\"$(PKG_BUILD_DEPS)\""
	@echo "PKG_DEPENDENCIES=\"$(PKG_DEPS)\""
	@echo "PKG_DESCRIPTION=\"$(strip $(PKG_DESCRIPTION))\""
	@echo "PKG_GROUP=\"$(PKG_GROUP)\""
	@echo "PKG_LICENSE=\"$(PKG_LICENSE)\""
	@echo "PKG_MAINTAINER=\"$(PKG_MAINTAINER)\""
	@echo "PKG_NAME=\"$(PKG_NAME_REAL)\""
	@echo "PKG_OBJECTS=\"$(strip $(PKG_OBJECTS))\""
	@echo "PKG_PACKAGES=\"$(PKG_PACKAGES)\""
	@echo "PKG_PACKAGES_FILES=\"$(PKG_PACKAGES_FILES)\""
	@echo "PKG_VER=\"$(PKG_VER)\""
	@echo "PKG_REL=\"$(PKG_REL)\""
	@echo "PKG_SUMMARY=\"$(strip $(PKG_SUMMARY))\""
	@echo "PKG_URL=\"$(PKG_URL)\""
ifeq "$(TOOLCHAIN)" "1"
	@echo "PKG_TOOLCHAIN_DEPENDENCIES=\"$(PKG_TOOLCHAIN_DEPS)\""
endif

$(OBJECTS):
	@echo "Object file \"$@\" is required." >&2
	@exit 1

%.ipk: $(STAGE_DONE)
	@echo "$(strip $(PKG_FILES_$(patsubst %$(PKG_SUFFIX),%,$@)))" \
		> $(DIR_TMP)/filelist_$(patsubst %$(PKG_SUFFIX),%,$@)
	@/usr/src/src/pakfire/compressor $(DIR_PACKAGES)/$@ \
		--root=$(BUILDROOT) $(if $(PKG_FILES_$(patsubst %$(PKG_SUFFIX),%,$@)), \
		--regexes=$(DIR_TMP)/filelist_$(patsubst %$(PKG_SUFFIX),%,$@))

.PHONY: package
package: $(if $(TOOLCHAIN),$(STAGE_DONE),$$(STAGE_PACKAGE_TARGETS))

.PHONY: shell
shell: $(OBJECTS)
	$(if $(STAGE_PREPARE),$(DO_PREPARE))

$(STAGE_DONE): $(OBJECTS)
	$(if $(STAGE_PREPARE),$(DO_PREPARE))
	$(if $(STAGE_BUILD),$(DO_BUILD))
	$(if $(STAGE_INSTALL),$(DO_INSTALL))
	@touch $@
