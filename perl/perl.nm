###############################################################################
# IPFire.org    - An Open Source Firewall Solution                            #
# Copyright (C) - IPFire Development Team <info@ipfire.org>                   #
###############################################################################

name       = perl
version    = 5.14.1
# Never reset release in this package, just increase.
release    = 5

maintainer = Michael Tremer <michael.tremer@ipfire.org>
groups     = Development/Languages
url        = http://www.perl.org/
license    = GPL+ or Artistic and GPLv2+ or Artistic
summary    = Practical Extraction and Report Language.

description
	Perl is a high-level programming language with roots in C, sed, awk
	and shell scripting. Perl is good at handling processes and files,
	and is especially good at handling text. Perl's hallmarks are
	practicality and efficiency. While it is used to do a lot of
	different things, Perl's most common applications are system
	administration utilities and web programming. A large proportion of
	the CGI scripts on the web are written in Perl.  You need the perl
	package installed on your system so that your system can handle Perl
	scripts.
end

source_dl  = http://www.cpan.org/src/5.0/

build
	requires
		db4-devel
		gcc-c++
		gdbm-devel
		iana-etc
		perl
		procps
		zlib-devel
	end

	# Perl passes -fstack-protector, if no argument is passed that enables the SSP.
	# So we need to pass it explicitely.
	CFLAGS += -fstack-protector-all

	prepare_cmds
		sed -i 's/command /command[ -]/' makedepend.SH
	end

	build
		sed -i -e "s|BUILD_ZLIB\s*= True|BUILD_ZLIB = False|" \
			-e "s|INCLUDE\s*= ./zlib-src|INCLUDE = /usr/include|" \
			-e "s|LIB\s*= ./zlib-src|LIB = /usr/lib|" \
			cpan/Compress-Raw-Zlib/config.in

		sh ./Configure -des \
			-Doptimize="%{CFLAGS}" \
			-Dversion=%{version} \
			-Dmyhostname=localhost \
			-Dperladmin=root@localhost \
			-Dcc="gcc" \
			-Dcf_by="%{DISTRO_VENDOR}" \
			-Dprefix=/usr \
			-Dvendorprefix=/usr \
			-Dsiteprefix="/usr/local" \
			-Dsitelib="/usr/local/share/perl5" \
			-Dsitearch="/usr/local/lib/perl5" \
			-Dprivlib="/usr/share/perl5" \
			-Dvendorlib="/usr/share/perl5/vendor_perl" \
			-Darchlib="/usr/lib/perl5" \
			-Dvendorarch="/usr/lib/perl5/vendor_perl" \
			-Darchname=%{arch}-linux-thread-multi \
			-Dpager="/usr/bin/less -isr" \
			-Dman1dir=/usr/share/man/man1 \
			-Dman3dir=/usr/share/man/man3 \
			-Duseshrplib \
			-Dusethreads \
			-Duseithreads \
			-Duselargefiles \
			-Dd_semctl_semun \
			-Di_db \
			-Ui_ndbm \
			-Di_gdbm \
			-Di_shadow \
			-Di_syslog \
			-Dman3ext=3pm \
			-Duseperlio \
			-Dinstallusrbinperl=n \
			-Ubincompat5005 \
			-Uversiononly \
			-Dd_gethostent_r_proto \
			-Ud_endhostent_r_proto \
			-Ud_sethostent_r_proto \
			-Ud_endprotoent_r_proto \
			-Ud_setprotoent_r_proto \
			-Ud_endservent_r_proto \
			-Ud_setservent_r_proto \
			-Dscriptdir="/usr/bin"

		make %{PARALLELISMFLAGS}
	end

#	test
#		make test
#	end

	install_cmds
		# Remove precreated directories
		rm -rfv %{BUILDROOT}/usr/local
	end
end

quality-agent
	whitelist_rpath
		/lib
		/usr/lib
		/usr/lib/perl5/CORE
	end
end

# This variable contains the constant version string
# of this perl package.
perl_requires := %{name}=%{thisver}

perl_filter_requires
	perl>=[0-9]\:.*
end

packages
	package perl
		requires
			perl-libs=%{thisver}
		end

		provides
			# Compat provides
			perl(:MODULE_COMPAT_5.14.2)
			perl(:MODULE_COMPAT_5.14.1)
			perl(:MODULE_COMPAT_5.14.0)
	
			# Threading provides
			perl(:WITH_ITHREADS)
			perl(:WITH_THREADS)
	
			# Largefile provides
			perl(:WITH_LARGEFILES)

			# PerlIO provides
			perl(:WITH_PERLIO)
	
			# File provides
			perl(abbrev.pl)
			perl(assert.pl)
			perl(bigfloat.pl)
			perl(bigint.pl)
			perl(bigrat.pl)
			perl(bytes_heavy.pl)
			perl(cacheout.pl)
			perl(complete.pl)
			perl(ctime.pl)
			perl(dotsh.pl)
			perl(dumpvar.pl)
			perl(exceptions.pl)
			perl(fastcwd.pl)
			perl(find.pl)
			perl(finddepth.pl)
			perl(flush.pl)
			perl(ftp.pl)
			perl(getcwd.pl)
			perl(getopt.pl)
			perl(getopts.pl)
			perl(hostname.pl)
			perl(importenv.pl)
			perllook.pl)
			perl(newgetopt.pl)
			perl(open2.pl)
			perl(open3.pl)
			perl(perl5db.pl)
			perl(pwd.pl)
			perl(shellwords.pl)
			perl(stat.pl)
			perl(syslog.pl)
			perl(tainted.pl)
			perl(termcap.pl)
			perl(timelocal.pl)
			perl(utf8_heavy.pl)
			perl(validate.pl)
			perl(Carp::Heavy)
			perl(Exporter)
			perl(File::Basename)
			perl(constant)
			perl(strict)
			perl(vars)

			# XXX why?
			perl(Mac::InternetConfig)
			perl(NDBM_File)
		end

		filter_requires
			%{perl_filter_requires}
			DBIx
			InternetConfig
			perl\(Mac
			perl\(NDBM_File
			perl\(VMS
		end
	end
	
	package perl-libs
		template LIBS
	
		provides
			libperl.so
		end
	
		files
			/usr/lib/perl5/CORE/libperl.so
		end
	end
	
	package perl-devel
		template DEVEL
	
		files
			/usr/bin/enc2xs
			/usr/share/man/man1/enc2xs*
			/usr/share/perl5/Encode/
			/usr/bin/h2xs
			/usr/share/man/man1/h2xs*
			/usr/bin/libnetcfg
			/usr/share/man/man1/libnetcfg*
			/usr/bin/perlivp
			/usr/share/man/man1/perlivp*
			/usr/lib/perl5/CORE/*.h
			/usr/bin/xsubpp
			/usr/share/man/man1/xsubpp*
			/usr/share/man/man1/perlxs*
		end
	end
	
	#package perl-tests
	#	summary = Testsuite to check your Perl installation.
	#	description-perl-tests
	#		This package contains the test suite included with perl %{thisver}.
	#		Install this if you want to test your Perl installation (binary and core
	#		modules).
	#	end
	#
	#	files
	#		/usr/lib/perl5-tests
	#	end
	#end
	
	package perl-Archive-Extract
		epoch = 0
		version = 0.48
		arch = noarch
	
		summary = Generic archive extracting mechanism.
		description
			Archive::Extract is a generic archive extraction mechanism.
		end

		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Archive/Extract.pm
			/usr/share/man/man3/Archive::Extract.3*
		end
	end
	
	package perl-Archive-Tar
		epoch = 0
		version = 1.76
		arch = noarch
	
		summary = A module for Perl manipulation of .tar files.
		description
			Archive::Tar provides an object oriented mechanism for handling tar files. It
			provides class methods for quick and easy files handling while also allowing
			for the creation of tar file objects for custom manipulation. If you have the
			IO::Zlib module installed, Archive::Tar will also support compressed or
			gzipped tar files.
		end

		requires
			%{perl_requires}
		end
	
		files
			/usr/bin/ptar
			/usr/bin/ptardiff
			/usr/bin/ptargrep
			/usr/share/perl5/Archive/Tar.pm
			/usr/share/man/man1/ptar.1*
			/usr/share/man/man1/ptardiff.1*
			/usr/share/man/man1/ptargrep.1*
			/usr/share/man/man3/Archive::Tar*
		end
	end

	package perl-Class-ISA
		epoch = 0
		version = 0.36
		arch = noarch

		summary = Report the search path for a class's ISA tree
		description
			Suppose you have a class (like Food::Fish::Fishstick) that is derived, via
			its @ISA, from one or more superclasses (as Food::Fish::Fishstick is from
			Food::Fish, Life::Fungus, and Chemicals), and some of those superclasses
			may themselves each be derived, via its @ISA, from one or more superclasses
			(as above).
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Class/ISA.pm
			/usr/share/man/man3/Class::ISA.3*
		end
	end
	
	package perl-Compress-Raw-Zlib
		epoch = 0
		version = 2.033

		summary = Low-Level Interface to the zlib compression library.
		description
			This module provides a Perl interface to the zlib compression library.
			It is used by IO::Compress::Zlib.
		end

		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Compress/Raw/Zlib/
			/usr/share/man/man3/Compress::Raw::Zlib*
		end
	end

	package perl-CGI
		epoch = 0
		version = 3.49
		arch = noarch

		summary = Handle Common Gateway Interface requests and responses
		description
			CGI.pm is a stable, complete and mature solution for processing and preparing
			HTTP requests and responses. Major features including processing form
			submissions, file uploads, reading and writing cookies, query string generation
			and manipulation, and processing and preparing HTTP headers. Some HTML
			generation utilities are included as well.

			CGI.pm performs very well in in a vanilla CGI.pm environment and also comes
			with built-in support for mod_perl and mod_perl2 as well as FastCGI.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(CGI)=%{version}
		end

		filter_requires
			perl\(FCGI\)
		end

		files
			/usr/share/perl5/CGI
			/usr/share/perl5/CGI.pm
			/usr/share/man/man3/CGI.3*
			/usr/share/man/man3/CGI::*.3*
		end
	end
	
	package perl-CPAN
		epoch = 0
		version = 1.9600.01
		arch = noarch
	
		summary = Query, download and build perl modules from CPAN sites.
		description
			Query, download and build perl modules from CPAN sites.
		end
	
		requires
			%{perl_requires}
			perl(Digest::SHA)
		end
	
		provides
			cpan
			cpan=$(version-perl-CPAN)
		end

		filter_requires
			perl\(Mac::BuildTools\)
		end
	
		files
			/usr/bin/cpan
			/usr/share/perl5/CPAN*
			/usr/share/man/man1/cpan.1*
			/usr/share/man/man3/CPAN*
		end
	end

	package perl-CPAN-Meta
		epoch = 0
		version = 2.110440
		arch = noarch

		summary = Distribution metadata for a CPAN dist.
		description
			Software distributions released to the CPAN include a META.json or, for
			older distributions, META.yml, which describes the distribution, its
			contents, and the requirements for building and installing the
			distribution. The data structure stored in the META.json file is described
			in CPAN::Meta::Spec.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/CPAN/Meta.pm
			/usr/share/perl5/CPAN/Meta
			/usr/share/perl5/CPAN/Meta/Converter.pm
			/usr/share/perl5/CPAN/Meta/Feature.pm
			/usr/share/perl5/CPAN/Meta/History.pm
			/usr/share/perl5/CPAN/Meta/Prereqs.pm
			/usr/share/perl5/CPAN/Meta/Spec.pm
			/usr/share/perl5/CPAN/Meta/Validator.pm
			/usr/share/man/man5/CPAN::Meta.*
		end
	end

	package perl-CPAN-Meta-YAML
		epoch = 0
		version = 0.0003
		arch = noarch

		summary = Read and write a subset of YAML for CPAN Meta files.
		description
			This module implements a subset of the YAML specification for use in reading
			and writing CPAN metadata files like META.yml and MYMETA.yml. It should not be
			used for any other general YAML parsing or generation task.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/CPAN/Meta/YAML.pm
			/usr/share/man/man5/CPAN::Meta::YAML*
		end
	end

	package perl-CPANPLUS
		epoch = 0
		version = 0.9103
		arch = noarch
	
		summary = API & CLI access to the CPAN mirrors.
		description
			The CPANPLUS library is an API to the CPAN mirrors and a collection of
			interactive shells, commandline programs, etc, that use this API.
		end
	
		requires
			%{perl_requires}
			perl(Digest::SHA)
			perl(Module::Pluggable)>=2.4
			perl(Module::CoreList)
		end
	
		provides
			perl-CPANPLUS-Dist-Build=0.06
		end

		filter_requires
			%{perl_filter_requires}
			DBIx
			Your::Module::Here
			perl\(DBD::SQLite\)
		end
	
		files
			/usr/bin/cpan2dist
			/usr/bin/cpanp
			/usr/bin/cpanp-run-perl
			/usr/share/perl5/CPANPLUS*
			/usr/share/man/man1/cpan2dist.1*
			/usr/share/man/man1/cpanp.1*
			/usr/share/man/man3/CPANPLUS*
		end
	end

	package perl-Carp
		epoch = 0
		version = 1.20
		arch = noarch

		summary = Alternative warn and die for modules.
		description
			The Carp routines are useful in your own modules because they act like
			die() or warn(), but with a message which is more likely to be useful to a
			user of your module. In the case of cluck, confess, and longmess that
			context is a summary of every call in the call-stack. For a shorter message
			you can use carp or croak which report the error as being from where your
			module was called. There is no guarantee that that is where the error was,
			but it is a good educated guess.
		end

		requires
			%{perl_requires}
		end

		# Do not export unversioned module
		filter_provides = ^perl\(Carp\)\s*$

		files
			/usr/share/perl5/Carp*
			/usr/share/man3/Carp*
		end
	end

	package perl-Digest
		epoch = 0
		version = 1.16
		arch = noarch

		summary = Modules that calculate message digests.
		description
			The Digest:: modules calculate digests, also called "fingerprints" or
			"hashes", of some data, called a message. The digest is (usually)
			some small/fixed size string. The actual size of the digest depend of
			the algorithm used. The message is simply a sequence of arbitrary
			bytes or bits.
		end

		requires
			%{perl_requires}
			perl(MIME::Base64)
		end

		files
			/usr/lib/perl5/Digest
			!/usr/lib/perl5/Digest/*
			/usr/share/perl5/Digest.pm
			/usr/share/perl5/Digest/base.pm
			/usr/share/perl5/Digest/file.pm
			/usr/share/man/man5/Digest.3*
			/usr/share/man/man5/Digest::base.3*
			/usr/share/man/man5/Digest::file.3*
		end
	end

	package perl-Digest-MD5
		epoch = 0
		version = 2.51

		summary = Perl Interface to the MD5 Algorithm.
		description
			The Digest::MD5 module allows you to use the RSA Data Security Inc. MD5
			Message Digest algorithm from within Perl programs. The algorithm takes as
			input a message of arbitrary length and produces as output a 128-bit
			"fingerprint" or "message digest" of the input.
		end

		requires
			%{perl_requires}
			perl(Digest::base)>=1.00
		end

		files
			/usr/lib/perl5/Digest/MD5.pm
			/usr/lib/perl5/auto/Digest/MD5
			/usr/share/man/man3/Digest::MD5.3*
		end
	end
	
	package perl-Digest-SHA
		epoch = 0
		version = 5.61
	
		summary = Perl extension for SHA-1/224/256/384/512.
		description
			Digest::SHA is a complete implementation of the NIST Secure Hash
			Standard.  It gives Perl programmers a convenient way to calculate
			SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 message digests. The
			module can handle all types of input, including partial-byte data.
		end
	
		requires
			%{perl_requires}
			perl(Digest::base)
			perl(MIME::Base64)
		end
	
		files
			/usr/bin/shasum
			/usr/share/perl5/Digest/SHA*
			/usr/share/man/man1/shasum.1*
			/usr/share/man/man3/Digest::SHA.3*
		end
	end

	package perl-ExtUtils-CBuilder
		epoch = 0
		version = 0.280203
		arch = noarch

		summary = Compile and link C code for Perl modules.
		description
			This module can build the C portions of Perl modules by invoking the
			appropriate compilers and linkers in a cross-platform manner. It was
			motivated by the Module::Build project, but may be useful for other
			purposes as well.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			/usr/share/perl5/ExtUtils/CBuilder*
			/usr/share/man/man3/ExtUtils::CBuilder*
		end
	end

	package perl-ExtUtils-Embed
		epoch = 0
		version = 1.30
		arch = noarch

		summary = Utilities for embedding Perl in C/C++ applications.
		description
			Utilities for embedding Perl in C/C++ applications.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			/usr/share/perl5/ExtUtils/Embed*
			/usr/share/man/man3/ExtUtils::Embed*
		end
	end

	package perl-ExtUtils-MakeMaker
		epoch = 0
		version = 6.57_05
		arch = noarch

		summary = Create a module Makefile.
		description
			Create a module Makefile.
		end

		requires
			%{perl_requires}
			perl-devel
			perl(Test::Harness)
		end

		files
			/usr/bin/instmodsh
			/usr/share/perl5/ExtUtils/Command/
			/usr/share/perl5/ExtUtils/Install.pm
			/usr/share/perl5/ExtUtils/Installed.pm
			/usr/share/perl5/ExtUtils/Liblist/
			/usr/share/perl5/ExtUtils/Liblist.pm
			/usr/share/perl5/ExtUtils/MakeMaker/
			/usr/share/perl5/ExtUtils/MakeMaker.pm
			/usr/share/perl5/ExtUtils/MANIFEST.SKIP
			/usr/share/perl5/ExtUtils/MM*.pm
			/usr/share/perl5/ExtUtils/MY.pm
			/usr/share/perl5/ExtUtils/Manifest.pm
			/usr/share/perl5/ExtUtils/Mkbootstrap.pm
			/usr/share/perl5/ExtUtils/Mksymlists.pm
			/usr/share/perl5/ExtUtils/Packlist.pm
			/usr/share/perl5/ExtUtils/testlib.pm
			/usr/share/man/man1/instmodsh.1*
			/usr/share/man/man3/ExtUtils::Command::MM*
			/usr/share/man/man3/ExtUtils::Install.3*
			/usr/share/man/man3/ExtUtils::Installed.3*
			/usr/share/man/man3/ExtUtils::Liblist.3*
			/usr/share/man/man3/ExtUtils::MM*
			/usr/share/man/man3/ExtUtils::MY.3*
			/usr/share/man/man3/ExtUtils::MakeMaker*
			/usr/share/man/man3/ExtUtils::Manifest.3*
			/usr/share/man/man3/ExtUtils::Mkbootstrap.3*
			/usr/share/man/man3/ExtUtils::Mksymlists.3*
			/usr/share/man/man3/ExtUtils::Packlist.3*
			/usr/share/man/man3/ExtUtils::testlib.3*
		end
	end

	package perl-ExtUtils-ParseXS
		epoch = 0
		version = 2.2210
		arch = noarch

		summary = Module and a script for converting Perl XS code into C code.
		description
			ExtUtils::ParseXS will compile XS code into C code by embedding the
			constructs necessary to let C functions manipulate Perl values and creates
			the glue necessary to let Perl access those functions.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			/usr/share/perl5/ExtUtils/ParseXS.pm
			/usr/share/perl5/ExtUtils/xsubpp
			/usr/share/man/man3/ExtUtils::ParseXS.3*
		end
	end

	package perl-File-Fetch
		epoch = 1
		version = 0.32
		arch = noarch

		summary = Generic file fetching mechanism.
		description
			File::Fetch is a generic file fetching mechanism.
		end

		requires
			%{perl_requires}
			perl(IPC::Cmd)>=0.36
			perl(Module::Load::Conditional)>=0.04
			perl(Params::Check)>=0.07
		end

		files
			/usr/share/perl5/File/Fetch.pm
			/usr/share/man/man3/File::Fetch.3*
		end
	end

	package perl-HTTP-Tiny
		epoch = 0
		version = 0.012
		arch = noarch

		summary = A small, simple, correct HTTP/1.1 client.
		description
			This is a very simple HTTP/1.1 client, designed primarily for doing simple GET
			requests without the overhead of a large framework like LWP::UserAgent.
			It is more correct and more complete than HTTP::Lite. It supports proxies
			(currently only non-authenticating ones) and redirection. It also correctly
			resumes after EINTR.
		end

		requires
			%{perl_requires}
			perl(Carp)
			perl(IO::Socket)
		end

		files
			/usr/share/perl5/HTTP/Tiny.pm
			/usr/share/man/man5/HTTP::Tiny*
		end
	end

	package perl-IO-Compress
		epoch = 0
		version = 2.033

		summary = IO::Compress wrapper for modules.
		description
			This module is the base class for all IO::Compress and IO::Uncompress
			modules. This module is not intended for direct use in application code.
			Its sole purpose is to to be sub-classed by IO::Compress modules.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(IO::Uncompress::Bunzip2)
		end

		files
			/usr/share/perl5/Compress/Zlib.pm
			/usr/lib/perl5/auto/Compress/Zlib/
			/usr/share/man/man3/Compress::Zlib*
			/usr/share/perl5/File/GlobMapper.pm
			/usr/share/perl5/IO/Compress/Base/
			/usr/share/perl5/IO/Compress/Base.pm
			/usr/share/perl5/IO/Uncompress/AnyUncompress.pm
			/usr/share/perl5/IO/Uncompress/Base.pm
			/usr/share/man/man3/File::GlobMapper.*
			/usr/share/man/man3/IO::Compress::Base.*
			/usr/share/man/man3/IO::Uncompress::AnyUncompress.*
			/usr/share/man/man3/IO::Uncompress::Base.*
		end
	end

	package perl-IO-Zlib
		epoch = 0
		version = 1.10
		arch = noarch

		summary = Perl IO:: style interface to Compress::Zlib.
		description
			This modules provides an IO:: style interface to the Compress::Zlib
			package. The main advantage is that you can use an IO::Zlib object in much
			the same way as an IO::File object so you can have common code that doesn't
			know which sort of file it is using.
		end

		requires
			%{perl_requires}
			perl(Compress::Zlib)
		end

		files
			/usr/share/perl5/IO/Zlib.pm
			/usr/share/man/man3/IO::Zlib.*
		end
	end

	package perl-IPC-Cmd
		epoch = 0
		version = 0.70
		arch = noarch

		summary = Finding and running system commands made easy.
		description
			IPC::Cmd allows you to run commands, interactively if desired, in a
			platform independent way, but have them still work.
		end

		requires
			%{perl_requires}
			perl(ExtUtils::MakeMaker)
		end

		files
			/usr/share/perl5/IPC/Cmd.pm
			/usr/share/man/man3/IPC::Cmd.3*
		end
	end

	package perl-JSON-PP
		epoch = 0
		version = 2.27150
		arch = noarch

		summary = JSON::XS compatible pure-Perl module.
		description
			JSON::XS is the fastest and most proper JSON module on CPAN. It is written by
			Marc Lehmann in C, so must be compiled and installed in the used environment.
			JSON::PP is a pure-Perl module and is compatible with JSON::XS.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/bin/json_pp
			/usr/share/perl5/JSON/PP
			/usr/share/perl5/JSON/PP.pm
			/usr/share/man/man1/json_pp.1*
			/usr/share/man/man3/JSON::PP.3*
			/usr/share/man/man3/JSON::PP::Boolean.3pm*
		end
	end
	
	package perl-Locale-Maketext-Simple
		epoch = 0
		version = 0.21
		arch = noarch
		license = MIT
	
		summary = Simple interface to Locale::Maketext::Lexicon.
		description
			This module is a simple wrapper around Locale::Maketext::Lexicon, designed
			to alleviate the need of creating Language Classes for module authors.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Locale/Maketext/Simple.pm
			/usr/share/man/man3/Locale::Maketext::Simple.*
		end
	end
	
	package perl-Log-Message
		epoch = 0
		version = 0.04
		arch = noarch
	
		summary = Generic message storage mechanism.
		description
			Log::Message is a generic message storage mechanism. It allows you to store
			messages on a stack -- either shared or private -- and assign meta-data to it.
			Some meta-data will automatically be added for you, like a timestamp and a
			stack trace, but some can be filled in by the user, like a tag by which to
			identify it or group it, and a level at which to handle the message (for
			example, log it, or die with it).
		end
	
		requires
			%{perl_requires}
		end
	
		provides
			perl(Log::Message::Handlers)=%{version}
		end

		files
			/usr/share/perl5/Log/Message.pm
			/usr/share/perl5/Log/Message/Config.pm
			/usr/share/perl5/Log/Message/Handlers.pm
			/usr/share/perl5/Log/Message/Item.pm
			/usr/share/man/man3/Log::Message.3*
			/usr/share/man/man3/Log::Message::Config.3*
			/usr/share/man/man3/Log::Message::Handlers.3*
			/usr/share/man/man3/Log::Message::Item.3*
		end
	end
	
	package perl-Log-Message-Simple
		epoch = 0
		version = 0.08
		arch = noarch
	
		summary = Simplified frontend to Log::Message.
		description
			This module provides standardized logging facilities using the
			Log::Message module.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Log/Message/Simple.pm
			/usr/share/man/man3/Log::Message::Simple.3*
		end
	end
	
	package perl-Module-Build
		epoch = 0
		version = 0.3800
		arch = noarch
	
		summary = Perl module for building and installing Perl modules.
		description
			Module::Build is a system for building, testing, and installing Perl modules.
			It is meant to be an alternative to ExtUtils::MakeMaker.  Developers may alter
			the behavior of the module through subclassing in a much more straightforward
			way than with MakeMaker. It also does not require a make on your system - most
			of the Module::Build code is pure-perl and written in a very cross-platform
			way. In fact, you don't even need a shell, so even platforms like MacOS
			(traditional) can use it fairly easily. Its only prerequisites are modules that
			are included with perl 5.6.0, and it works fine on perl 5.005 if you can
			install a few additional modules.
		end
	
		requires
			%{perl_requires}
			perl(Archive::Tar)>=1.08
			perl(CPAN::Meta)>=2.110420
			perl(ExtUtils::CBuilder)>=0.15
			perl(ExtUtils::ParseXS)>=1.02
		end
	
		files
			/usr/bin/config_data
			/usr/share/perl5/inc/
			/usr/share/perl5/Module/Build*
			/usr/share/man/man1/config_data.1*
			/usr/share/man/man3/Module::Build*
			/usr/share/man/man3/inc::latest.3*
		end
	end
	
	package perl-Module-CoreList
		epoch = 0
		version = 2.49_01
		arch = noarch
	
		summary = Perl core modules indexed by perl versions.
		description
			Module::CoreList contains the hash of hashes %Module::CoreList::version, this
			is keyed on perl version as indicated in $].  The second level hash is module
			=> version pairs.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/bin/corelist
			/usr/share/perl5/Module/CoreList.pm
			/usr/share/man/man1/corelist*
			/usr/share/man/man3/Module::CoreList*
		end
	end
	
	package perl-Module-Load
		epoch = 0
		version = 0.18
		arch = noarch
	
		summary = Runtime require of both modules and files.
		description
			Module::Load eliminates the need to know whether you are trying to require
			either a file or a module.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Module/Load.pm
			/usr/share/man/man3/Module::Load.*
		end
	end
	
	package perl-Module-Load-Conditional
		epoch = 0
		version = 0.44
		arch = noarch
	
		summary = Looking up module information / loading at runtime.
		description
			Module::Load::Conditional provides simple ways to query and possibly load
			any of the modules you have installed on your system during runtime.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Module/Load/
			/usr/share/man/man3/Module::Load::Conditional*
		end
	end
	
	package perl-Module-Loaded
		epoch = 0
		version = 0.06
		arch = noarch
	
		summary = Mark modules as loaded or unloaded.
		description
			When testing applications, often you find yourself needing to provide
			functionality in your test environment that would usually be provided by
			external modules. Rather than munging the %INC by hand to mark these external
			modules as loaded, so they are not attempted to be loaded by perl, this module
			offers you a very simple way to mark modules as loaded and/or unloaded.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Module/Loaded.pm
			/usr/share/man/man3/Module::Loaded*
		end
	end

	package perl-Module-Metadata
		epoch = 0
		version = 1.000004
		arch = noarch

		summary = Gather package and POD information from perl module files.
		description
			Gather package and POD information from perl module files.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Module/Metadata.pm
			/usr/share/man/man3/Module::Metadata.3pm*
		end
	end

	package perl-Module-Plugable
		epoch = 0
		version = 3.90
		arch = noarch

		summary = Automatically give your module the ability to have plugins.
		description
			Provides a simple but, hopefully, extensible way of having 'plugins' for
			your module.
		end
	
		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Devel/InnerPackage.pm
			/usr/share/perl5/Module/Pluggable/
			/usr/share/perl5/Module/Pluggable.pm
			/usr/share/man/man3/Devel::InnerPackage*
			/usr/share/man/man3/Module::Pluggable*
		end
	end

	package perl-Object-Accessor
		epoch = 0
		version = 0.38
		arch = noarch
	
		summary = Perl module that allows per object accessors.
		description
			Object::Accessor provides an interface to create per object accessors (as
			opposed to per Class accessors, as, for example, Class::Accessor provides).
		end

		requires
			%{perl_requires}
		end
	
		files
			/usr/share/perl5/Object/
			/usr/share/man/man3/Object::Accessor*
		end
	end
	
	package perl-Package-Constants
		epoch = 0
		version = 0.02
		arch = noarch
	
		summary = List all constants declared in a package.
		description
			Package::Constants lists all the constants defined in a certain package.  This
			can be useful for, among others, setting up an autogenerated @EXPORT/@EXPORT_OK
			for a Constants.pm file.
		end
	
		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Package/
			/usr/share/man/man3/Package::Constants*
		end
	end
	
	package perl-Params-Check
		epoch = 0
		version = 0.28
		arch = noarch
	
		summary = Generic input parsing/checking mechanism.
		description
			Params::Check is a generic input parsing/checking mechanism.
		end
	
		requires
			%{perl_requires}
		end

		provides
			perl(Params::Check)
		end
	
		files
			/usr/share/perl5/Params/
			/usr/share/man/man3/Params::Check*
		end
	end
	
	package perl-Parse-CPAN-Meta
		epoch = 0
		version = 1.4401
		arch = noarch

		summary = Parse META.yml and other similar CPAN metadata files.
		description
			Parse::CPAN::Meta is a parser for META.yml files, based on the parser half of
			YAML::Tiny.
		end
	
		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Parse/CPAN/Meta.pm
			/usr/share/man/man3/Parse::CPAN::Meta.3*
		end
	end
	
	package perl-Path-Tools
		epoch = 0
		version = 3.33
		license = (GPL+ or Artistic) and BSD
	
		summary = PathTools Perl module (Cwd, File::Spec).
		description
			PathTools Perl module (Cwd, File::Spec).
		end
	
		requires
			%{perl_requires}
		end

		filter_requires
			perl\(VMS\:\:Filespec\)
		end
	
		files
			/usr/lib/perl5/Cwd.pm
			/usr/lib/perl5/File/Spec*
			/usr/share/man/man3/Cwd*
			/usr/share/man/man3/File::Spec*
		end
	end

	package perl-Perl-OSType
		epoch = 0
		version = 1.002
		arch = noarch

		summary = Map perl operating system names to generic types.
		description
			Modules that provide OS-specific behaviors often need to know if the current
			operating system matches a more generic type of operating systems. For example,
			'linux' is a type of 'Unix' operating system and so is 'freebsd'.
			This module provides a mapping between an operating system name as given by $^O
			and a more generic type. The initial version is based on the OS type mappings
			provided in Module::Build and ExtUtils::CBuilder (thus, Microsoft operating
			systems are given the type 'Windows' rather than 'Win32').
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Perl/OSType.pm
			/usr/share/man/man3/Perl::OSType.3pm*
		end
	end
	
	package perl-Pod-Escapes
		epoch= 0
		version = 1.04
		arch = noarch
	
		summary = Perl module for resolving POD escape sequences.
		description
			This module provides things that are useful in decoding Pod E<...> sequences.
			Presumably, it should be used only by Pod parsers and/or formatters.
		end
	
		requires
			%{perl_requires}
		end

		filter_requires
			%{perl_filter_requires}
		end
	
		files
			/usr/share/perl5/Pod/Escapes.pm
			/usr/share/man/man3/Pod::Escapes.*
		end
	end
	
	package perl-Pod-Simple
		epoch = 0
		version = 3.16
		arch = noarch
	
		summary = Framework for parsing POD documentation.
		description
			Pod::Simple is a Perl library for parsing text in the Pod (plain old
			documentation) markup language that is typically used for writing
			documentation for Perl and for Perl modules.
		end
	
		requires
			%{perl_requires}
		end

		filter_requires
			%{perl_filter_requires}
		end
	
		files
			/usr/share/perl5/Pod/Simple/
			/usr/share/perl5/Pod/Simple.pm
			/usr/share/perl5/Pod/Simple.pod
			/usr/share/man/man3/Pod::Simple*
		end
	end

	package perl-Scalar-List-Utils
		epoch = 0
		version = 1.22

		summary = A selection of general-utility scalar and list subroutines.
		description
			Scalar::Util and List::Util contain a selection of subroutines that people have
			expressed would be nice to have in the perl core, but the usage would not
			really be high enough to warrant the use of a keyword, and the size so small
			such that being individual extensions would be wasteful.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/lib/perl5/List
			/usr/lib/perl5/Scalar
			/usr/lib/perl5/auto/List
			/usr/share/man/man3/List::Util*
			/usr/share/man/man3/Scalar::Util*
		end
	end
	
	package perl-Term-UI
		epoch = 0
		version = 0.26
		arch = noarch

		summary = Term::ReadLine UI made easy.
		description
			Term::UI is a transparent way of eliminating the overhead of having to format
			a question and then validate the reply, informing the user if the answer was not
			proper and re-issuing the question.
		end

		requires
			%{perl_requires}
			perl(Log::Message::Simple)
		end

		files
			/usr/share/perl5/Term/UI/
			/usr/share/perl5/Term/UI.pm
			/usr/share/man/man3/Term::UI*
		end
	end

	package perl-Test-Harness
		epoch = 0
		version = 3.23
		arch = noarch

		summary = Run Perl standard test scripts with statistics.
		description
			Run Perl standard test scripts with statistics.
			Use TAP::Parser, Test::Harness package was whole rewritten.
		end

		requires
			%{perl_requires}
		end

		filter_requires
			%{perl_filter_requires}
		end

		files
			/usr/bin/prove
			/usr/share/perl5/App*
			/usr/share/perl5/TAP*
			/usr/share/perl5/Test/Harness*
			/usr/share/man/man1/prove.1*
			/usr/share/man/man3/App*
			/usr/share/man/man3/TAP*
			/usr/share/man/man3/Test::Harness*
		end
	end

	package perl-Test-Simple
		epoch = 0
		version = 0.98
		arch = noarch

		summary = Basic utilities for writing tests.
		description
			Basic utilities for writing tests.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Test/More*
			/usr/share/perl5/Test/Builder*
			/usr/share/perl5/Test/Simple*
			/usr/share/perl5/Test/Tutorial*
			/usr/share/man/man3/Test::More*
			/usr/share/man/man3/Test::Builder*
			/usr/share/man/man3/Test::Simple*
			/usr/share/man/man3/Test::Tutorial*
		end
	end

	package perl-Time-Piece
		epoch = 0
		version = 1.20_01

		summary = Time objects from localtime and gmtime.
		description
			The Time::Piece module replaces the standard localtime and gmtime functions
			with implementations that return objects.  It does so in a backwards compatible
			manner, so that using localtime or gmtime as documented in perlfunc still
			behave as expected.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/lib/perl5/Time/Piece.pm
			/usr/lib/perl5/Time/Seconds.pm
			/usr/lib/perl5/auto/Time/Piece/
			/usr/share/man/man3/Time::Piece.3*
			/usr/share/man/man3/Time::Seconds.3*
		end
	end

	package perl-Version-Requirements
		epoch = 0
		version = 0.101020
		arch = noarch

		summary = Set of version requirements for a CPAN dist.
		description
			A Version::Requirements object models a set of version constraints like
			those specified in the META.yml or META.json files in CPAN distributions.
			It can be built up by adding more and more constraints, and it will reduce
			them to the simplest representation.
		end

		requires
			%{perl_requires}
		end

		# No files.
		files
		end
	end

	package perl-parent
		epoch = 0
		version = 0.225
		arch = noarch

		summary = Establish an ISA relationship with base classes at compile time.
		description
			parent allows you to both load one or more modules, while setting up
			inheritance from those modules at the same time.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/parent.pm
			/usr/share/man/man3/parent.3*
		end
	end

	package perl-threads
		epoch = 0
		version = 1.83

		summary = Perl interpreter-based threads.
		description
			Since Perl 5.8, thread programming has been available using a model called
			interpreter threads  which provides a new Perl interpreter for each thread,
			and, by default, results in no data or state information being shared between
			threads. (Prior to Perl 5.8, 5005threads was available through the Thread.pm
			API. This threading model has been deprecated, and was removed as of Perl
			5.10.0.) As just mentioned, all variables are, by default, thread local. To use
			shared variables, you need to also load threads::shared.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/lib/perl5/auto/threads/threads*
			/usr/lib/perl5/threads.pm
			/usr/share/man/man3/threads.3*
		end
	end

	package perl-threads-shared
		epoch = 0
		version = 1.37

		summary = Perl extension for sharing data structures between threads.
		description
			By default, variables are private to each thread, and each newly created thread
			gets a private copy of each existing variable. This module allows you to share
			variables across different threads (and pseudo-forks on Win32). It is used
			together with the threads module.  This module supports the sharing of the
			following data types only: scalars and scalar refs, arrays and array refs, and
			hashes and hash refs.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/lib/perl5/auto/threads/shared*
			/usr/lib/perl5/threads/shared*
			/usr/share/man/man3/threads::shared*
		end
	end

	package perl-version
		epoch = 0
		version = 0.88
		arch = noarch

		summary = Perl extension for Version Objects.
		description
			Perl extension for Version Objects.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/version.pm
			/usr/share/perl5/version.pod
			/usr/share/perl5/version/
			/usr/share/man/man3/version.3*
			/usr/share/man/man3/version::Internals.3*
		end
	end

	package perl-core
		epoch = 0

		summary = Base perl metapackage.
		description
			A metapackage which requires all of the perl bits and modules in the upstream
			tarball from perl.org.
		end

		requires
			%{perl_requires}
			perl-libs
			perl-devel
			perl-Archive-Extract
			perl-Archive-Tar
			perl-Class-ISA
			perl-Compress-Raw-Zlib
			perl-CGI
			perl-CPAN
			perl-CPAN-Meta
			perl-CPAN-Meta-YAML
			perl-CPANPLUS
			perl-Carp
			perl-Digest
			perl-Digest-MD5
			perl-Digest-SHA
			perl-ExtUtils-CBuilder
			perl-ExtUtils-Embed
			perl-ExtUtils-MakeMaker
			perl-ExtUtils-ParseXS
			perl-File-Fetch
			perl-HTTP-Tiny
			perl-IO-Compress
			perl-IO-Zlib
			perl-IPC-Cmd
			perl-JSON-PP
			perl-Locale-Maketext-Simple
			perl-Log-Message
			perl-Log-Message-Simple
			perl-Module-Build
			perl-Module-CoreList
			perl-Module-Load
			perl-Module-Load-Conditional
			perl-Module-Loaded
			perl-Module-Metadata
			perl-Module-Plugable
			perl-Object-Accessor
			perl-Package-Constants
			perl-Params-Check
			perl-Parse-CPAN-Meta
			perl-Perl-OSType
			perl-Path-Tools
			perl-Pod-Simple
			perl-Scalar-List-Utils
			perl-Term-UI
			perl-Test-Harness
			perl-Test-Simple
			perl-Time-Piece
			perl-parent
			perl-threads
			perl-threads-shared
			perl-version
		end

		# Nothing. Nada. Zilch. Zarro. Uh uh. Nope. Sorry.
		files
		end
	end
end
