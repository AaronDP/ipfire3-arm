###############################################################################
# IPFire.org    - An Open Source Firewall Solution                            #
# Copyright (C) - IPFire Development Team <info@ipfire.org>                   #
###############################################################################

name       = perl
version    = 5.20.2
# Never reset release in this package, just increase.
release    = 13

perl_epoch = 2
thisver = %{perl_epoch}:%{version}-%{_release}

maintainer = Michael Tremer <michael.tremer@ipfire.org>
groups     = Development/Languages
url        = http://www.perl.org/
license    = GPL+ or Artistic and GPLv2+ or Artistic
summary    = Practical Extraction and Report Language.

description
	Perl is a high-level programming language with roots in C, sed, awk
	and shell scripting. Perl is good at handling processes and files,
	and is especially good at handling text. Perl's hallmarks are
	practicality and efficiency. While it is used to do a lot of
	different things, Perl's most common applications are system
	administration utilities and web programming. A large proportion of
	the CGI scripts on the web are written in Perl.  You need the perl
	package installed on your system so that your system can handle Perl
	scripts.
end

source_dl  = http://www.cpan.org/src/5.0/

build
	requires
		db4-devel
		gcc-c++
		gdbm-devel
		iana-etc
		perl
		procps
		zlib-devel
	end

	# Perl passes -fstack-protector, if no argument is passed that enables the SSP.
	# So we need to pass it explicitely.
	CFLAGS += -fstack-protector-all

	prepare_cmds
		sed -i 's/command /command[ -]/' makedepend.SH
	end

	configure_options = \
		-des \
		-Doptimize="%{CFLAGS}" \
		-Dccdlflags="-Wl,--enable-new-dtags" \
		-Dlddlflags="-shared %{CFLAGS} %{LDFLAGS}" \
		-DDDEBUGGING=-g \
		-Dversion=%{version} \
		-Dmyhostname=localhost \
		-Dperladmin=root@localhost \
		-Dcc="gcc" \
		-Dcf_by="%{DISTRO_VENDOR}" \
		-Dprefix=/usr \
		-Dvendorprefix=/usr \
		-Dsiteprefix="/usr/local" \
		-Dsitelib="/usr/local/share/perl5" \
		-Dsitearch="/usr/local/lib/perl5" \
		-Dprivlib="/usr/share/perl5" \
		-Dvendorlib="/usr/share/perl5/vendor_perl" \
		-Darchlib="%{libdir}/perl5" \
		-Dvendorarch="%{libdir}/perl5/vendor_perl" \
		-Darchname=%{arch}-linux-thread-multi \
		-Dpager="/usr/bin/less -isr" \
		-Dman1dir=/usr/share/man/man1 \
		-Dman3dir=/usr/share/man/man3 \
		-Duseshrplib \
		-Dusethreads \
		-Duseithreads \
		-Duselargefiles \
		-Dd_semctl_semun \
		-Di_db \
		-Ui_ndbm \
		-Di_gdbm \
		-Di_shadow \
		-Di_syslog \
		-Dman3ext=3pm \
		-Duseperlio \
		-Dinstallusrbinperl=n \
		-Ubincompat5005 \
		-Uversiononly \
		-Dd_gethostent_r_proto \
		-Ud_endhostent_r_proto \
		-Ud_sethostent_r_proto \
		-Ud_endprotoent_r_proto \
		-Ud_setprotoent_r_proto \
		-Ud_endservent_r_proto \
		-Ud_setservent_r_proto \
		-Dscriptdir="/usr/bin"

	if "%{DISTRO_ARCH}" == "x86_64"
		configure_options += \
			-Dlibpth="/usr/local/lib64 /lib64 %{prefix}/lib64"
	end

	build
		sed -i -e "s|BUILD_ZLIB\s*= True|BUILD_ZLIB = False|" \
			-e "s|INCLUDE\s*= ./zlib-src|INCLUDE = /usr/include|" \
			-e "s|LIB\s*= ./zlib-src|LIB = %{libdir}|" \
			cpan/Compress-Raw-Zlib/config.in

		sh ./Configure %{configure_options}

		make %{PARALLELISMFLAGS}
	end

	test
		make test
	end

	install_cmds
		# Remove precreated directories
		rm -rfv %{BUILDROOT}/usr/local
	end
end

quality-agent
	whitelist_rpath
		/%{lib}
		%{libdir}
		%{libdir}/perl5/CORE
	end
end

# This variable contains the constant version string
# of this perl package.
perl_requires := %{name} = %{thisver}

packages
	package perl
		# Increase epoch because of automatic dependencies.
		epoch = 2

		requires
			perl-libs = %{version}-%{_release}
		end

		provides
			# Compat provides
			perl(:MODULE_COMPAT_5.20.2)
			perl(:MODULE_COMPAT_5.20.1)
			perl(:MODULE_COMPAT_5.20.0)

			# Threading provides
			perl(:WITH_ITHREADS)
			perl(:WITH_THREADS)

			# Largefile provides
			perl(:WITH_LARGEFILES)

			# PerlIO provides
			perl(:WITH_PERLIO)

			# File provides
			perl(abbrev.pl)
			perl(assert.pl)
			perl(bigfloat.pl)
			perl(bigint.pl)
			perl(bigrat.pl)
			perl(bytes_heavy.pl)
			perl(cacheout.pl)
			perl(complete.pl)
			perl(ctime.pl)
			perl(dotsh.pl)
			perl(dumpvar.pl)
			perl(exceptions.pl)
			perl(fastcwd.pl)
			perl(find.pl)
			perl(finddepth.pl)
			perl(flush.pl)
			perl(ftp.pl)
			perl(getcwd.pl)
			perl(getopt.pl)
			perl(getopts.pl)
			perl(hostname.pl)
			perl(importenv.pl)
			perllook.pl)
			perl(newgetopt.pl)
			perl(open2.pl)
			perl(open3.pl)
			perl(perl5db.pl)
			perl(pwd.pl)
			perl(shellwords.pl)
			perl(stat.pl)
			perl(syslog.pl)
			perl(tainted.pl)
			perl(termcap.pl)
			perl(timelocal.pl)
			perl(utf8_heavy.pl)
			perl(validate.pl)
			perl(File::Basename)
			perl(strict)
			perl(vars)
		end

		filter_requires
			DBIx
			InternetConfig
			Mac::
			NDBM_File
			Tk
			unicore::Name
			VMS::
		end

		obsoletes
			perl-Archive-Extract
			perl-Class-ISA
			perl-CPANPLUS
			perl-Log-Message
			perl-Log-Message-Simple
			perl-Module-Plugable
			perl-Object-Accessor
			perl-Term-UI
			perl-Version-Requirements
		end
	end

	package perl-libs
		template LIBS

		provides
			libperl.so
		end

		files
			%{libdir}/perl5/CORE/libperl.so
		end
	end

	package perl-devel
		template DEVEL

		files
			/usr/bin/enc2xs
			/usr/share/man/man1/enc2xs*
			/usr/share/perl5/Encode/
			/usr/bin/h2xs
			/usr/share/man/man1/h2xs*
			/usr/bin/libnetcfg
			/usr/share/man/man1/libnetcfg*
			/usr/bin/perlivp
			/usr/share/man/man1/perlivp*
			%{libdir}/perl5/CORE/*.h
			/usr/bin/xsubpp
			/usr/share/man/man1/xsubpp*
			/usr/share/man/man1/perlxs*
		end
	end

	#package perl-tests
	#	summary = Testsuite to check your Perl installation.
	#	description-perl-tests
	#		This package contains the test suite included with perl %{thisver}.
	#		Install this if you want to test your Perl installation (binary and core
	#		modules).
	#	end
	#
	#	files
	#		%{libdir}/perl5-tests
	#	end
	#end

	package perl-App-a2p
		epoch = 0
		version = 1.000

		summary = Awk to Perl translator.
		description
			This package delivers a2p tool which takes an awk script specified on the
			command line and produces a comparable Perl script.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/a2p
			%{datadir}/perl5/pod/a2p.pod
			%{mandir}/man1/a2p.1*
		end
	end

	package perl-App-find2perl
		epoch = 0
		version = 0.001
		arch = noarch

		summary = Translate find command lines to Perl code.
		description
			This package delivers find2perl tool which is a little translator to convert
			find command lines to equivalent Perl code.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/find2perl
			%{mandir}/man1/find2perl.1*
		end
	end

	package perl-App-s2p
		epoch = 0
		version = 1.000
		arch = noarch

		summary = Convert sed scripts to Perl programm.
		description
			This package delivers the s2p tool, which converts sed scripts to
			Perl programms.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/psed
			%{bindir}/s2p
			%{mandir}/man1/psed.1*
			%{mandir}/man1/s2p.1*
		end
	end

	package perl-Archive-Tar
		epoch = 0
		version = 1.96
		arch = noarch

		summary = A module for Perl manipulation of .tar files.
		description
			Archive::Tar provides an object oriented mechanism for handling tar files. It
			provides class methods for quick and easy files handling while also allowing
			for the creation of tar file objects for custom manipulation. If you have the
			IO::Zlib module installed, Archive::Tar will also support compressed or
			gzipped tar files.
		end

		requires
			%{perl_requires}
			perl(IO::Zlib) >= 1.01
			perl(IO::Compress::Bzip2) >= 2.015
			perl(IO::Uncompress::Bunzip2) >= 2.015
		end

		files
			%{bindir}/ptar
			%{bindir}/ptardiff
			%{bindir}/ptargrep
			%{datadir}/perl5/Archive/Tar 
			%{datadir}/perl5/Archive/Tar.pm
			%{mandir}/man1/ptar.1*
			%{mandir}/man1/ptardiff.1*
			%{mandir}/man1/ptargrep.1*
			%{mandir}/man3/Archive::Tar* 
		end
	end

	package perl-autodie
		epoch = 0
		version = 2.23
		arch = noarch

		summary = Replace functions with ones that succeed or die.
		descripton
			The "autodie" and "Fatal" pragma provides a convenient way to replace
			functions that normally return false on failure with equivalents that throw an
			exception on failure.

			However "Fatal" has been obsoleted by the new autodie pragma. Please use
			autodie in preference to "Fatal".
		end

		requires
			%{perl_requires}
			perl(B)
			perl(Fcntl)
			perl(overload)
			perl(POSIX)
		end

		files
			%{datadir}/perl5/autodie/
			%{datadir}/perl5/autodie.pm
			%{datadir}/perl5/Fatal.pm
			%{mandir}/man3/autodie.3*
			%{mandir}/man3/autodie::*
			%{mandir}/man3/Fatal.3*
		end
	end

	package perl-B-Debug
		epoch = 0
		version = 1.19
		arch = noarch

		summary = Walk Perl syntax tree, print debug information about op-codes.
		description
			Walk Perl syntax tree and print debug information about op-codes. See
			B::Concise and B::Terse for other details.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/B/Debug.pm
			%{mandir}/man3/B::Debug.3*
		end
	end

	package perl-Compress-Raw-Bzip2
		epoch = 0
		version = 2.064

		summary = Low-Level Interface to bzip2 compression library.
		description
			This module provides a Perl interface to the bzip2 compression library.
			It is used by IO::Compress::Bzip2.
		end

		requires
			%{perl_requires}
			perl(Exporter)
			perl(File::Temp)
		end

		files
			%{libdir}/perl5/Compress/Raw/Bzip2.pm
			%{libdir}/perl5/auto/Compress/Raw/Bzip2
			%{mandir}/man3/Compress::Raw::Bzip2*
		end
	end

	package perl-Compress-Raw-Zlib
		epoch = 0
		version = 2.065

		summary = Low-Level Interface to the zlib compression library.
		description
			This module provides a Perl interface to the zlib compression library.
			It is used by IO::Compress::Zlib.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/Compress/Raw/Zlib.pm
			%{libdir}/perl5/auto/Compress/Raw/Zlib
			%{mandir}/man3/Compress::Raw::Zlib*
		end
	end

	package perl-CGI
		epoch = 0
		version = 3.63
		arch = noarch

		summary = Handle Common Gateway Interface requests and responses
		description
			CGI.pm is a stable, complete and mature solution for processing and preparing
			HTTP requests and responses. Major features including processing form
			submissions, file uploads, reading and writing cookies, query string generation
			and manipulation, and processing and preparing HTTP headers. Some HTML
			generation utilities are included as well.

			CGI.pm performs very well in in a vanilla CGI.pm environment and also comes
			with built-in support for mod_perl and mod_perl2 as well as FastCGI.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(CGI)=%{version}
		end

		filter_requires
			FCGI
		end

		files
			/usr/share/perl5/CGI
			/usr/share/perl5/CGI.pm
			/usr/share/man/man3/CGI.3*
			/usr/share/man/man3/CGI::*.3*
		end
	end

	package perl-CPAN
		epoch = 0
		version = 2.05
		arch = noarch

		summary = Query, download and build perl modules from CPAN sites.
		description
			Query, download and build perl modules from CPAN sites.
		end

		requires
			%{perl_requires}
			perl(Digest::SHA)
		end

		provides
			cpan
			cpan=$(version-perl-CPAN)
		end

		filter_requires
			Mac::BuildTools
		end

		files
			/usr/bin/cpan
			/usr/share/perl5/CPAN*
			/usr/share/man/man1/cpan.1*
			/usr/share/man/man3/CPAN*
		end
	end

	package perl-CPAN-Meta
		epoch = 0
		version = 2.140640
		arch = noarch

		summary = Distribution metadata for a CPAN dist.
		description
			Software distributions released to the CPAN include a META.json or, for
			older distributions, META.yml, which describes the distribution, its
			contents, and the requirements for building and installing the
			distribution. The data structure stored in the META.json file is described
			in CPAN::Meta::Spec.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/CPAN/Meta.pm
			/usr/share/perl5/CPAN/Meta
			/usr/share/perl5/CPAN/Meta/Converter.pm
			/usr/share/perl5/CPAN/Meta/Feature.pm
			/usr/share/perl5/CPAN/Meta/History.pm
			/usr/share/perl5/CPAN/Meta/Prereqs.pm
			/usr/share/perl5/CPAN/Meta/Spec.pm
			/usr/share/perl5/CPAN/Meta/Validator.pm
			/usr/share/man/man5/CPAN::Meta.*
		end
	end

	package perl-CPAN-Meta-Requirements
		epoch = 0
		version = 2.122
		arch = noarch

		summary = Set of version requirements for a CPAN dist.
		description
			A CPAN::Meta::Requirements object models a set of version constraints like
			those specified in the META.yml or META.json files in CPAN distributions.
			It can be built up by adding more and more constraints, and it will reduce
			them to the simplest representation.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/CPAN/Meta/Requirements.pm
			%{mandir}/man3/CPAN::Meta::Requirements.3*
		end
	end

	package perl-CPAN-Meta-YAML
		epoch = 0
		version = 0.012
		arch = noarch

		summary = Read and write a subset of YAML for CPAN Meta files.
		description
			This module implements a subset of the YAML specification for use in reading
			and writing CPAN metadata files like META.yml and MYMETA.yml. It should not be
			used for any other general YAML parsing or generation task.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/CPAN/Meta/YAML.pm
			/usr/share/man/man5/CPAN::Meta::YAML*
		end
	end

	package perl-Carp
		epoch = 0
		version = 1.33.01
		arch = noarch

		summary = Alternative warn and die for modules.
		description
			The Carp routines are useful in your own modules because they act like
			die() or warn(), but with a message which is more likely to be useful to a
			user of your module. In the case of cluck, confess, and longmess that
			context is a summary of every call in the call-stack. For a shorter message
			you can use carp or croak which report the error as being from where your
			module was called. There is no guarantee that that is where the error was,
			but it is a good educated guess.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(Carp) = %{version}
			perl(Carp::Heavy) = %{version}
		end

		# Do not export unversioned module
		#filter_provides = ^perl\(Carp\)\s*$

		files
			/usr/share/perl5/Carp*
			/usr/share/man3/Carp*
		end
	end

	package perl-constant
		epoch = 0
		version = 1.31
		arch = noarch

		summary = Perl pragma to declare constants.
		description
			This pragma allows you to declare constants at compile-time.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/constant.pm
			%{mandir}/man3/constant.3*
		end
	end

	package perl-Data-Dumper
		epoch = 0
		version = 2.151

		summary = Stringify perl data structures, suitable for printing and eval.
		description
			Given a list of scalars or reference variables, writes out their contents
			in perl syntax. The references can also be objects. The content of each
			variable is output in a single Perl statement. Handles self-referential
			structures correctly.
		end

		requires
			%{perl_requires}
			perl(Scalar::Util)
			perl(XSLoader)
		end

		files
			%{libdir}/perl5/auto/Data/Dumper/Dumper.so
			%{libdir}/perl5/Data/Dumper.pm
			%{mandir}/man3/Data::Dumper.3*
		end
	end

	package perl-DB_File
		epoch = 0
		version = 1.831

		summary = Perl5 access to Berkeley DB version 1.x.
		description
			DB_File is a module which allows Perl programs to make use of the facilities
			provided by Berkeley DB version 1.x (if you have a newer version of DB, you
			will be limited to functionality provided by interface of version 1.x). The
			interface defined here mirrors the Berkeley DB interface closely.
		end

		requires
			%{perl_requires}
			perl(Fcntl)
			perl(XSLoader)
		end

		files
			%{libdir}/perl5/DB_File.pm
			%{libdir}/perl5/auto/DB_File/DB_File.so
			%{mandir}/man3/DB_File*
		end
	end

	package perl-Devel-PPPort
		epoch = 0
		version = 3.21

		summary = Perl Pollution Portability header generator.
		description
			Perl's API has changed over time, gaining new features, new functions,
			increasing its flexibility, and reducing the impact on the C name space
			environment (reduced pollution). The header file written by this module,
			typically ppport.h, attempts to bring some of the newer Perl API features
			to older versions of Perl, so that you can worry less about keeping track
			of old releases, but users can still reap the benefit.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/Devel/PPPort.pm
			%{libdir}/perl5/auto/Devel/PPPort/PPPort.so
			%{mandir}/man3/Devel::PPPort.3*
		end
	end

	package perl-Digest
		epoch = 0
		version = 1.17
		arch = noarch

		summary = Modules that calculate message digests.
		description
			The Digest:: modules calculate digests, also called "fingerprints" or
			"hashes", of some data, called a message. The digest is (usually)
			some small/fixed size string. The actual size of the digest depend of
			the algorithm used. The message is simply a sequence of arbitrary
			bytes or bits.
		end

		requires
			%{perl_requires}
			perl(MIME::Base64)
		end

		files
			%{libdir}/perl5/Digest
			!%{libdir}/perl5/Digest/*
			/usr/share/perl5/Digest.pm
			/usr/share/perl5/Digest/base.pm
			/usr/share/perl5/Digest/file.pm
			/usr/share/man/man3/Digest.3*
			/usr/share/man/man3/Digest::base.3*
			/usr/share/man/man3/Digest::file.3*
		end
	end

	package perl-Digest-MD5
		epoch = 0
		version = 2.53

		summary = Perl Interface to the MD5 Algorithm.
		description
			The Digest::MD5 module allows you to use the RSA Data Security Inc. MD5
			Message Digest algorithm from within Perl programs. The algorithm takes as
			input a message of arbitrary length and produces as output a 128-bit
			"fingerprint" or "message digest" of the input.
		end

		requires
			%{perl_requires}
			perl(Digest::base)>=1.00
		end

		files
			%{libdir}/perl5/Digest/MD5.pm
			%{libdir}/perl5/auto/Digest/MD5
			/usr/share/man/man3/Digest::MD5.3*
		end
	end

	package perl-Digest-SHA
		epoch = 0
		version = 5.88

		summary = Perl extension for SHA-1/224/256/384/512.
		description
			Digest::SHA is a complete implementation of the NIST Secure Hash
			Standard.  It gives Perl programmers a convenient way to calculate
			SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 message digests. The
			module can handle all types of input, including partial-byte data.
		end

		requires
			%{perl_requires}
			perl(Digest::base)
			perl(MIME::Base64)
		end

		files
			/usr/bin/shasum
			%{libdir}/perl5/Digest/SHA*
			%{libdir}/perl5/auto/Digest/SHA*
			/usr/share/perl5/Digest/SHA*
			/usr/share/man/man1/shasum.1*
			/usr/share/man/man3/Digest::SHA.3*
		end
	end

	package perl-Encode
		epoch = 0
		version = 2.60

		summary = Character encodings in Perl.
		description
			The Encode module provides the interface between Perl strings and the rest
			of the system. Perl strings are sequences of characters.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/piconv
			%{libdir}/perl5/Encode*
			%{libdir}/perl5/auto/Encode*
			%{datadir}/perl5/Encode
			!%{datadir}/perl5/Encode/*.e2x
			!%{datadir}/perl5/Encode/encode.h
			%{mandir}/man1/piconv.1*
			%{mandir}/man3/Encode*.3*
		end
	end

	package perl-Env
		epoch = 0
		version = 1.04
		arch = noarch

		summary = Perl module that imports environment variables as scalars or arrays.
		description
			Perl maintains environment variables in a special hash named %%ENV. For when
			this access method is inconvenient, the Perl module Env allows environment
			variables to be treated as scalar or array variables.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Env.pm
			%{mandir}/man3/Env.3*
		end
	end

	package perl-experimental
		epoch = 0
		version = 0.007
		arch = noarch

		summary = Experimental features made easy.
		description
			This pragma provides an easy and convenient way to enable or disable
			experimental features.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/experimental*
			%{mandir}/man3/experimental*
		end
	end

	package perl-Exporter
		epoch = 0
		version = 5.71
		arch = noarch

		summary = Implements default import method for modules.
		description
			The Exporter module implements an import method which allows a module to
			export functions and variables to its users' name spaces. Many modules use
			Exporter rather than implementing their own import method because Exporter
			provides a highly flexible interface, with an implementation optimized for
			the common case.
		end

		requires
			%{perl_requires}
			perl(Carp) >= 1.05
		end

		files
			%{datadir}/perl5/Exporter*
			%{mandir}/man3/Exporter*
		end
	end

	package perl-ExtUtils-CBuilder
		epoch = 0
		version = 0.280217
		arch = noarch

		summary = Compile and link C code for Perl modules.
		description
			This module can build the C portions of Perl modules by invoking the
			appropriate compilers and linkers in a cross-platform manner. It was
			motivated by the Module::Build project, but may be useful for other
			purposes as well.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			/usr/share/perl5/ExtUtils/CBuilder*
			/usr/share/man/man3/ExtUtils::CBuilder*
		end
	end

	package perl-ExtUtils-Command
		epoch = 0
		version = 1.18
		arch = noarch

		summary = Perl routines to replace common UNIX commands in Makefiles.
		description
			This Perl module is used to replace common UNIX commands. In all cases the
			functions work with @ARGV rather than taking arguments. This makes them
			easier to deal with in Makefiles.
		end

		requires
			%{perl_requires}
			perl(File::Find)
		end

		files
			%{datadir}/perl5/ExtUtils/Command.pm
			%{mandir}/man3/ExtUtils::Command.*
		end
	end

	package perl-ExtUtils-Embed
		epoch = 0
		version = 1.32
		arch = noarch

		summary = Utilities for embedding Perl in C/C++ applications.
		description
			Utilities for embedding Perl in C/C++ applications.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			/usr/share/perl5/ExtUtils/Embed*
			/usr/share/man/man3/ExtUtils::Embed*
		end
	end

	package perl-ExtUtils-Install
		epoch = 0
		version = 1.67
		arch = noarch

		summary = Install files from here to there.
		description
			Handles the installing and uninstalling of perl modules, scripts, man
			pages, etc.
		end

		requires
			%{perl_requires}
			perl-devel
			perl(Data::Dumper)
		end

		filter_requires
			VMS::Filespec
		end

		files
			%{datadir}/perl5/ExtUtils/Install.pm
			%{datadir}/perl5/ExtUtils/Installed.pm
			%{datadir}/perl5/ExtUtils/Packlist.pm
			%{mandir}/man3/ExtUtils::Install.3*
			%{mandir}/man3/ExtUtils::Installed.3*
			%{mandir}/man3/ExtUtils::Packlist.3*
		end
	end

	package perl-ExtUtils-MakeMaker
		epoch = 0
		version = 6.98
		arch = noarch

		summary = Create a module Makefile.
		description
			Create a module Makefile.
		end

		requires
			%{perl_requires}
			perl-devel
			perl(Data::Dumper)
			perl(ExtUtils::Command)
			perl(ExtUtils::Install)
			perl(ExtUtils::Manifest)
			perl(File::Find)
			perl(Getopt::Long)
			perl(Test::Harness)
		end

		filter_requires
			VMS::Filespec
		end

		files
			/usr/bin/instmodsh
			/usr/share/perl5/ExtUtils/Command/
			/usr/share/perl5/ExtUtils/Liblist/
			/usr/share/perl5/ExtUtils/Liblist.pm
			/usr/share/perl5/ExtUtils/MakeMaker/
			/usr/share/perl5/ExtUtils/MakeMaker.pm
			/usr/share/perl5/ExtUtils/MANIFEST.SKIP
			/usr/share/perl5/ExtUtils/MM*.pm
			/usr/share/perl5/ExtUtils/MY.pm
			/usr/share/perl5/ExtUtils/Manifest.pm
			/usr/share/perl5/ExtUtils/Mkbootstrap.pm
			/usr/share/perl5/ExtUtils/Packlist.pm
			/usr/share/perl5/ExtUtils/testlib.pm
			/usr/share/man/man1/instmodsh.1*
			/usr/share/man/man3/ExtUtils::Command::MM*
			/usr/share/man/man3/ExtUtils::Liblist.3*
			/usr/share/man/man3/ExtUtils::MM*
			/usr/share/man/man3/ExtUtils::MY.3*
			/usr/share/man/man3/ExtUtils::MakeMaker*
			/usr/share/man/man3/ExtUtils::Manifest.3*
			/usr/share/man/man3/ExtUtils::Mkbootstrap.3*
			/usr/share/man/man3/ExtUtils::Mksymlists.3*
			/usr/share/man/man3/ExtUtils::testlib.3*
		end
	end

	package perl-ExtUtils-Manifest
		epoch = 0
		version = 1.63
		arch = noarch

		summary = Utilities to write and check a MANIFEST file.
		description
			%{summary}
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/ExtUtils/Manifest.pm
			%{datadir}/perl5/ExtUtils/MANIFEST.SKIP
			%{mandir}/man3/ExtUtils::Manifest.3*
		end
	end

	package perl-ExtUtils-Miniperl
		epoch = 0
		version = 1.01
		arch = noarch

		summary = Write the C code for perlmain.c.
		description
			writemain() takes an argument list of directories containing archive libraries
			that relate to perl modules and should be linked into a new perl binary. It
			writes a corresponding perlmain.c file that is a plain C file containing all
			the bootstrap code to make the If the first argument to writemain() is a
			reference to a scalar it is used as the filename to open for ouput. Any other
			reference is used as the filehandle to write to. Otherwise output defaults to
			STDOUT.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			%{datadir}/perl5/ExtUtils/Miniperl.pm
			%{mandir}/man3/ExtUtils::Miniperl.3*
		end
	end

	package perl-ExtUtils-ParseXS
		epoch = 0
		version = 3.24
		arch = noarch

		summary = Module and a script for converting Perl XS code into C code.
		description
			ExtUtils::ParseXS will compile XS code into C code by embedding the
			constructs necessary to let C functions manipulate Perl values and creates
			the glue necessary to let Perl access those functions.
		end

		requires
			%{perl_requires}
			perl-devel
		end

		files
			%{bindir}/xsubpp
			%{datadir}/perl5/ExtUtils/ParseXS.pm
			%{datadir}/perl5/ExtUtils/ParseXS.pod
			%{datadir}/perl5/ExtUtils/ParseXS/Constants.pm
			%{datadir}/perl5/ExtUtils/ParseXS/CountLines.pm
			%{datadir}/perl5/ExtUtils/ParseXS/Eval.pm
			%{datadir}/perl5/ExtUtils/ParseXS/Utilities.pm
			%{datadir}/perl5/ExtUtils/Typemaps.pm
			%{datadir}/perl5/ExtUtils/Typemaps/Cmd.pm
			%{datadir}/perl5/ExtUtils/Typemaps/InputMap.pm
			%{datadir}/perl5/ExtUtils/Typemaps/OutputMap.pm
			%{datadir}/perl5/ExtUtils/Typemaps/Type.pm
			%{datadir}/perl5/ExtUtils/xsubpp
			%{mandir}/man1/xsubpp*
			%{mandir}/man3/ExtUtils::ParseXS.3*
			%{mandir}/man3/ExtUtils::ParseXS::Constants.3*
			%{mandir}/man3/ExtUtils::ParseXS::Eval.3*
			%{mandir}/man3/ExtUtils::ParseXS::Utilities.3*
			%{mandir}/man3/ExtUtils::Typemaps.3*
			%{mandir}/man3/ExtUtils::Typemaps::Cmd.3*
			%{mandir}/man3/ExtUtils::Typemaps::InputMap.3*
			%{mandir}/man3/ExtUtils::Typemaps::OutputMap.3*
			%{mandir}/man3/ExtUtils::Typemaps::Type.3*
		end
	end

	package perl-File-Fetch
		epoch = 1
		version = 0.48
		arch = noarch

		summary = Generic file fetching mechanism.
		description
			File::Fetch is a generic file fetching mechanism.
		end

		requires
			%{perl_requires}
			perl(IPC::Cmd)>=0.36
			perl(Module::Load::Conditional)>=0.04
			perl(Params::Check)>=0.07
		end

		files
			/usr/share/perl5/File/Fetch.pm
			/usr/share/man/man3/File::Fetch.3*
		end
	end

	package perl-File-Path
		epoch = 0
		version = 2.09
		arch = noarch

		summary = Create or remove directory trees.
		description
			This module provides a convenient way to create directories of arbitrary
			depth and to delete an entire directory subtree from the file system.
		end

		requires
			%{perl_requires}
			perl(Carp)
		end

		files
			%{datadir}/perl5/File/Path.pm
			%{mandir}/man3/File::Path.3*
		end
	end

	package perl-File-Temp
		epoch = 0
		version = 0.23.04
		arch = noarch

		summary = Return name and handle of a temporary file safely.
		description
			File::Temp can be used to create and open temporary files in a safe way.
			There is both a function interface and an object-oriented interface. The
			File::Temp constructor or the tempfile() function can be used to return the
			name and the open file handle of a temporary file. The tempdir() function
			can be used to create a temporary directory.
		end

		requires
			%{perl_requires}
			perl(File::Path) >= 2.06
			perl(POSIX)
		end

		filter_requires
			VMS::Stdio
		end

		files
			%{datadir}/perl5/File/Temp.pm
			%{mandir}/man3/File::Temp.3*
		end
	end

	package perl-Filter
		epoch = 0
		version = 1.49

		summary = Perl source filters.
		description
			Source filters alter the program text of a module before Perl sees it, much as
			a C preprocessor alters the source text of a C program before the compiler
			sees it.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/auto/Filter/Util
			%{libdir}/perl5/Filter/Util
			%{datadir}/perl5/pod/perlfilter.pod
			%{mandir}/man1/perlfilter.*
			%{mandir}/man3/Filter::Util::*
		end
	end

	package perl-Filter-Simple
		epoch = 0
		version = 0.91
		arch = noarch

		summary = Simplified Perl source filtering.
		description
			The Filter::Simple Perl module provides a simplified interface to
			Filter::Util::Call; one that is sufficient for most common cases.
		end

		requires
			%{perl_requires}
			perl(Text::Balanced) >= 1.97
		end

		files
			%{datadir}/perl5/Filter/Simple.pm
			%{mandir}/man3/Filter::Simple.3*
		end
	end

	package perl-Getopt-Long
		epoch = 0
		version = 2.42
		arch = noarch

		summary = Extended processing of command line options.
		description
			The Getopt::Long module implements an extended getopt function called
			GetOptions(). It parses the command line from @ARGV, recognizing and removing
			specified options and their possible values.
		end

		requires
			%{perl_requires}
			perl(Text::ParseWords)
			perl(Pod::Usage) >= 1.14
		end

		files
			%{datadir}/perl5/Getopt/Long.pm
			%{mandir}/man3/Getopt::Long.3*
		end
	end

	package perl-HTTP-Tiny
		epoch = 0
		version = 0.043
		arch = noarch

		summary = A small, simple, correct HTTP/1.1 client.
		description
			This is a very simple HTTP/1.1 client, designed primarily for doing simple GET
			requests without the overhead of a large framework like LWP::UserAgent.
			It is more correct and more complete than HTTP::Lite. It supports proxies
			(currently only non-authenticating ones) and redirection. It also correctly
			resumes after EINTR.
		end

		requires
			%{perl_requires}
			perl(Carp)
			perl(IO::Socket)
		end

		files
			/usr/share/perl5/HTTP/Tiny.pm
			/usr/share/man/man5/HTTP::Tiny*
		end
	end

	package perl-IO-Compress
		epoch = 0
		version = 2.064
		arch = noarch

		summary = IO::Compress wrapper for modules.
		description
			This module is the base class for all IO::Compress and IO::Uncompress
			modules. This module is not intended for direct use in application code.
			Its sole purpose is to to be sub-classed by IO::Compress modules.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(IO::Uncompress::Bunzip2)
		end

		files
			/usr/share/perl5/Compress/Zlib.pm
			%{libdir}/perl5/auto/Compress/Zlib/
			/usr/share/man/man3/Compress::Zlib*
			/usr/share/perl5/File/GlobMapper.pm
			/usr/share/perl5/IO/Compress/Base/
			/usr/share/perl5/IO/Compress/Base.pm
			/usr/share/perl5/IO/Uncompress/AnyUncompress.pm
			/usr/share/perl5/IO/Uncompress/Base.pm
			/usr/share/man/man3/File::GlobMapper.*
			/usr/share/man/man3/IO::Compress::Base.*
			/usr/share/man/man3/IO::Uncompress::AnyUncompress.*
			/usr/share/man/man3/IO::Uncompress::Base.*
		end
	end

	package perl-IO-Socket-IP
		epoch = 0
		version = 0.29
		arch = noarch

		summary = Drop-in replacement for IO::Socket::INET supporting both IPv4 and IPv6.
		description
			This module provides a protocol-independent way to use IPv4 and IPv6
			sockets, as a drop-in replacement for IO::Socket::INET. Most constructor
			arguments and methods are provided in a backward-compatible way.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/IO/Socket/IP.pm
			%{mandir}/man3/IO::Socket::IP.*
		end
	end

	package perl-IO-Zlib
		epoch = 0
		version = 1.10
		arch = noarch

		summary = Perl IO:: style interface to Compress::Zlib.
		description
			This modules provides an IO:: style interface to the Compress::Zlib
			package. The main advantage is that you can use an IO::Zlib object in much
			the same way as an IO::File object so you can have common code that doesn't
			know which sort of file it is using.
		end

		requires
			%{perl_requires}
			perl(Compress::Zlib)
		end

		files
			/usr/share/perl5/IO/Zlib.pm
			/usr/share/man/man3/IO::Zlib.*
		end
	end

	package perl-IPC-Cmd
		epoch = 0
		version = 0.92
		arch = noarch

		summary = Finding and running system commands made easy.
		description
			IPC::Cmd allows you to run commands, interactively if desired, in a
			platform independent way, but have them still work.
		end

		requires
			%{perl_requires}
			perl(ExtUtils::MakeMaker)
		end

		files
			/usr/share/perl5/IPC/Cmd.pm
			/usr/share/man/man3/IPC::Cmd.3*
		end
	end

	package perl-JSON-PP
		epoch = 0
		version = 2.27203
		arch = noarch

		summary = JSON::XS compatible pure-Perl module.
		description
			JSON::XS is the fastest and most proper JSON module on CPAN. It is written by
			Marc Lehmann in C, so must be compiled and installed in the used environment.
			JSON::PP is a pure-Perl module and is compatible with JSON::XS.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/bin/json_pp
			/usr/share/perl5/JSON/PP
			/usr/share/perl5/JSON/PP.pm
			/usr/share/man/man1/json_pp.1*
			/usr/share/man/man3/JSON::PP.3*
			/usr/share/man/man3/JSON::PP::Boolean.3pm*
		end
	end

	package perl-Locale-Codes
		epoch = 0
		version = 3.25
		arch = noarch

		summary = Distribution of modules to handle locale codes.
		description
			Locale-Codes is a distribution containing a set of modules. The modules
			each deal with different types of codes which identify parts of the locale
			including languages, countries, currency, etc.
		end

		requires
			%{perl_requires}
		end

		filter_requires
			Locale::Codes::Country_Retired
			Locale::Codes::LangFam_Retired
			Locale::Codes::Script_Retired
			Locale::Codes::LangExt_Codes
			Locale::Codes::LangFam_Codes
			Locale::Codes::Script_Codes
			Locale::Codes::Language_Codes
			Locale::Codes::LangExt_Retired
			Locale::Codes::Currency_Codes
			Locale::Codes::LangVar_Retired
			Locale::Codes::Language_Retired
			Locale::Codes::Country_Codes
			Locale::Codes::LangVar_Codes
			Locale::Codes::Currency_Retired
		end

		provides
			perl(Locale::Codes) = %{version}
		end

		files
			%{datadir}/perl5/Locale/Codes
			%{datadir}/perl5/Locale/Codes.*
			%{datadir}/perl5/Locale/Country.*
			%{datadir}/perl5/Locale/Currency.*
			%{datadir}/perl5/Locale/Language.*
			%{datadir}/perl5/Locale/Script.*
			%{mandir}/man3/Locale::Codes::*
			%{mandir}/man3/Locale::Codes.*
			%{mandir}/man3/Locale::Country.*
			%{mandir}/man3/Locale::Currency.*
			%{mandir}/man3/Locale::Language.*
			%{mandir}/man3/Locale::Script.*
		end
	end

	package perl-Locale-Maketext
		epoch = 0
		version = 1.25
		arch = noarch

		summary = Framework for localization.
		description
			It is a common feature of applications (whether run directly, or via the Web)
			for them to be "localized" -- i.e., for them to present an English interface
			to an English-speaker, a German interface to a German-speaker, and so on for
			all languages it's programmed with. Locale::Maketext is a framework for
			software localization; it provides you with the tools for organizing and
			accessing the bits of text and text-processing code that you need for
			producing localized applications.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5//Locale/Maketext.*
			%{datadir}/perl5/Locale/Maketext/Cookbook.*
			%{datadir}/perl5/Locale/Maketext/Guts.*
			%{datadir}/perl5/Locale/Maketext/GutsLoader.*
			%{datadir}/perl5/Locale/Maketext/TPJ13.*
			%{mandir}/man3/Locale::Maketext.*
			%{mandir}/man3/Locale::Maketext::Cookbook.*
			%{mandir}/man3/Locale::Maketext::Guts.*
			%{mandir}/man3/Locale::Maketext::GutsLoader.*
			%{mandir}/man3/Locale::Maketext::TPJ13.*
		end
	end

	package perl-Locale-Maketext-Simple
		epoch = 0
		version = 0.21
		arch = noarch
		license = MIT

		summary = Simple interface to Locale::Maketext::Lexicon.
		description
			This module is a simple wrapper around Locale::Maketext::Lexicon, designed
			to alleviate the need of creating Language Classes for module authors.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Locale/Maketext/Simple.pm
			%{mandir}/man3/Locale::Maketext::Simple.*
		end
	end

	package perl-Module-Build
		epoch = 0
		version = 0.42.05
		arch = noarch

		summary = Perl module for building and installing Perl modules.
		description
			Module::Build is a system for building, testing, and installing Perl modules.
			It is meant to be an alternative to ExtUtils::MakeMaker.  Developers may alter
			the behavior of the module through subclassing in a much more straightforward
			way than with MakeMaker. It also does not require a make on your system - most
			of the Module::Build code is pure-perl and written in a very cross-platform
			way. In fact, you don't even need a shell, so even platforms like MacOS
			(traditional) can use it fairly easily. Its only prerequisites are modules that
			are included with perl 5.6.0, and it works fine on perl 5.005 if you can
			install a few additional modules.
		end

		requires
			%{perl_requires}
			perl(Archive::Tar)>=1.08
			perl(CPAN::Meta)>=2.110420
			perl(ExtUtils::CBuilder)>=0.15
			perl(ExtUtils::ParseXS)>=1.02
		end

		files
			%{bindir}/config_data
			%{datadir}/perl5/inc/
			%{datadir}/perl5/Module/Build*
			%{mandir}/man1/config_data.1*
			%{mandir}/man3/Module::Build*
			%{mandir}/man3/inc::latest.3*
		end
	end

	package perl-Module-CoreList
		epoch = 0
		version = 5.20150214
		arch = noarch

		summary = Perl core modules indexed by perl versions.
		description
			Module::CoreList contains the hash of hashes %Module::CoreList::version, this
			is keyed on perl version as indicated in $].  The second level hash is module
			=> version pairs.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Module/CoreList
			%{datadir}/perl5/Module/CoreList.pm
			%{datadir}/perl5/Module/CoreList.pod
			%{mandir}/man3/Module::CoreList*
		end
	end

	package perl-Module-CoreList-tools
		epoch = 0
		version = 5.020001
		arch = noarch

		summary = Tool for listing modules shipped with perl.
		description
			This package provides a corelist(1) tool which can be used to query what
			modules were shipped with given perl version.
		end

		requires
			%{perl_requires}
			perl-Module-CoreList
		end

		files
			%{bindir}/corelist
			%{mandir}/man1/corelist*
		end
	end

	package perl-Module-Load
		epoch = 0
		version = 0.32
		arch = noarch

		summary = Runtime require of both modules and files.
		description
			Module::Load eliminates the need to know whether you are trying to require
			either a file or a module.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Module/Load.pm
			%{mandir}/man3/Module::Load.*
		end
	end

	package perl-Module-Load-Conditional
		epoch = 0
		version = 0.62
		arch = noarch

		summary = Looking up module information / loading at runtime.
		description
			Module::Load::Conditional provides simple ways to query and possibly load
			any of the modules you have installed on your system during runtime.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Module/Load/
			%{mandir}/man3/Module::Load::Conditional*
		end
	end

	package perl-Module-Loaded
		epoch = 0
		version = 0.08
		arch = noarch

		summary = Mark modules as loaded or unloaded.
		description
			When testing applications, often you find yourself needing to provide
			functionality in your test environment that would usually be provided by
			external modules. Rather than munging the %INC by hand to mark these external
			modules as loaded, so they are not attempted to be loaded by perl, this module
			offers you a very simple way to mark modules as loaded and/or unloaded.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Module/Loaded.pm
			%{mandir}/man3/Module::Loaded*
		end
	end

	package perl-Module-Metadata
		epoch = 0
		version = 1.000019
		arch = noarch

		summary = Gather package and POD information from perl module files.
		description
			Gather package and POD information from perl module files.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Module/Metadata.pm
			/usr/share/man/man3/Module::Metadata.3pm*
		end
	end

	package perl-Package-Constants
		epoch = 0
		version = 0.04
		arch = noarch

		summary = List all constants declared in a package.
		description
			Package::Constants lists all the constants defined in a certain package.  This
			can be useful for, among others, setting up an autogenerated @EXPORT/@EXPORT_OK
			for a Constants.pm file.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Package/
			/usr/share/man/man3/Package::Constants*
		end
	end

	package perl-Params-Check
		epoch = 0
		version = 0.38
		arch = noarch

		summary = Generic input parsing/checking mechanism.
		description
			Params::Check is a generic input parsing/checking mechanism.
		end

		requires
			%{perl_requires}
		end

		provides
			perl(Params::Check)
		end

		files
			/usr/share/perl5/Params/
			/usr/share/man/man3/Params::Check*
		end
	end

	package perl-Parse-CPAN-Meta
		epoch = 0
		version = 1.4414
		arch = noarch

		summary = Parse META.yml and other similar CPAN metadata files.
		description
			Parse::CPAN::Meta is a parser for META.yml files, based on the parser half of
			YAML::Tiny.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Parse/CPAN/Meta.pm
			/usr/share/man/man3/Parse::CPAN::Meta.3*
		end
	end

	package perl-Path-Tools
		epoch = 0
		version = 3.48
		license = (GPL+ or Artistic) and BSD

		summary = PathTools Perl module (Cwd, File::Spec).
		description
			PathTools Perl module (Cwd, File::Spec).
		end

		requires
			%{perl_requires}
		end

		filter_requires
			VMS::Filespec
		end

		files
			%{libdir}/perl5/Cwd.pm
			%{libdir}/perl5/File/Spec*
			/usr/share/man/man3/Cwd*
			/usr/share/man/man3/File::Spec*
		end
	end

	package perl-Perl-OSType
		epoch = 0
		version = 1.007
		arch = noarch

		summary = Map perl operating system names to generic types.
		description
			Modules that provide OS-specific behaviors often need to know if the current
			operating system matches a more generic type of operating systems. For example,
			'linux' is a type of 'Unix' operating system and so is 'freebsd'.
			This module provides a mapping between an operating system name as given by $^O
			and a more generic type. The initial version is based on the OS type mappings
			provided in Module::Build and ExtUtils::CBuilder (thus, Microsoft operating
			systems are given the type 'Windows' rather than 'Win32').
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Perl/OSType.pm
			/usr/share/man/man3/Perl::OSType.3pm*
		end
	end

	package perl-Pod-Checker
		epoch = 0
		version = 1.60
		arch = noarch

		summary = Check POD documents for syntax errors.
		description
			Module and tools to verify POD documentation contents for compliance with the
			Plain Old Documentation format specifications.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/podchecker
			%{datadir}/perl5/Pod/Checker.pm
			%{mandir}/man1/podchecker.*
			%{mandir}/man3/Pod::Checker.*
		end
	end

	package perl-Pod-Escapes
		epoch = 0
		version = 1.06
		arch = noarch

		summary = Perl module for resolving POD escape sequences.
		description
			This module provides things that are useful in decoding Pod E<...> sequences.
			Presumably, it should be used only by Pod parsers and/or formatters.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Pod/Escapes.pm
			/usr/share/man/man3/Pod::Escapes.*
		end
	end

	package perl-Pod-Parser
		epoch = 0
		version = 1.62
		arch = noarch

		summary = Basic perl modules for handling Plain Old Documentation (POD).
		description
			This software distribution contains the packages for using Perl5 POD (Plain
			Old Documentation). See the "perlpod" and "perlsyn" manual pages from your
			Perl5 distribution for more information about POD.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/podselect
			%{datadir}/perl5/Pod/Find.pm
			%{datadir}/perl5/Pod/InputObjects.pm
			%{datadir}/perl5/Pod/ParseUtils.pm
			%{datadir}/perl5/Pod/Parser.pm
			%{datadir}/perl5/Pod/PlainText.pm
			%{datadir}/perl5/Pod/Select.pm
			%{mandir}/man1/podselect.1*
			%{mandir}/man3/Pod::Find.*
			%{mandir}/man3/Pod::InputObjects.*
			%{mandir}/man3/Pod::ParseUtils.*
			%{mandir}/man3/Pod::Parser.*
			%{mandir}/man3/Pod::PlainText.*
			%{mandir}/man3/Pod::Select.*
		end
	end

	package perl-Pod-Perldoc
		epoch = 0
		version = 3.23
		arch = noarch

		summary = Look up Perl documentation in Pod format.
		description
			perldoc looks up a piece of documentation in .pod format that is embedded
			in the perl installation tree or in a perl script, and displays it via
			"groff -man | $PAGER". This is primarily used for the documentation for
			the perl library modules.
		end

		requires
			%{perl_requires}
		end

		files
			%{bindir}/perldoc
			%{datadir}/perl5/pod/perldoc.pod
			%{datadir}/perl5/Pod/Perldoc
			%{datadir}/perl5/Pod/Perldoc.pm
			%{mandir}/man1/perldoc.1*
			%{mandir}/man3/Pod::Perldoc*
		end
	end

	package perl-Pod-Simple
		epoch = 0
		version = 3.28
		arch = noarch

		summary = Framework for parsing POD documentation.
		description
			Pod::Simple is a Perl library for parsing text in the Pod (plain old
			documentation) markup language that is typically used for writing
			documentation for Perl and for Perl modules.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/Pod/Simple/
			/usr/share/perl5/Pod/Simple.pm
			/usr/share/perl5/Pod/Simple.pod
			/usr/share/man/man3/Pod::Simple*
		end
	end

	package perl-Pod-Usage
		epoch = 0
		version = 1.63
		arch = noarch

		summary = Print a usage message from embedded pod documentation.
		description
			pod2usage will print a usage message for the invoking script (using its
			embedded POD documentation) and then exit the script with the desired exit
			status. The usage message printed may have any one of three levels of
			"verboseness": If the verbose level is 0, then only a synopsis is printed.
			If the verbose level is 1, then the synopsis is printed along with a
			description (if present) of the command line options and arguments. If the
			verbose level is 2, then the entire manual page is printed.
		end

		requires
			%{perl_requires}
			perl(Pod::Text)
		end

		files
			%{bindir}/pod2usage
			%{datadir}/perl5/Pod/Usage.pm
			%{mandir}/man1/pod2usage.*
			%{mandir}/man3/Pod::Usage.*
		end
	end

	package perl-parent
		epoch = 0
		version = 0.228
		arch = noarch

		summary = Establish an ISA relationship with base classes at compile time.
		description
			parent allows you to both load one or more modules, while setting up
			inheritance from those modules at the same time.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/parent.pm
			%{mandir}/man3/parent.3*
		end
	end

	package perl-podlators
		epoch = 0
		version = 2.5.1
		arch = noarch

		summary = Format POD source into various output formats.
		description
			This package contains Pod::Man and Pod::Text modules which convert POD input
			to *roff source output, suitable for man pages, or plain text.  It also
			includes several sub-classes of Pod::Text for formatted output to terminals
			with various capabilities.
		end

		requires
			%{perl_requires}
			perl(File::Spec) >= 0.8
			perl(Pod::Simple) >= 3.06
		end

		files
			%{bindir}/pod2man
			%{bindir}/pod2text
			%{datadir}/perl5/pod/perlpodstyle.pod
			%{datadir}/perl5/Pod/Man.pm
			%{datadir}/perl5/Pod/ParseLink.pm
			%{datadir}/perl5/Pod/Text
			%{datadir}/perl5/Pod/Text.pm
			%{mandir}/man1/pod2man.1*
			%{mandir}/man1/pod2text.1*
			%{mandir}/man1/perlpodstyle.1*
			%{mandir}/man3/Pod::Man*
			%{mandir}/man3/Pod::ParseLink*
			%{mandir}/man3/Pod::Text*
		end
	end

	package perl-Scalar-List-Utils
		epoch = 0
		version = 1.28

		summary = A selection of general-utility scalar and list subroutines.
		description
			Scalar::Util and List::Util contain a selection of subroutines that people have
			expressed would be nice to have in the perl core, but the usage would not
			really be high enough to warrant the use of a keyword, and the size so small
			such that being individual extensions would be wasteful.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/List
			%{libdir}/perl5/Scalar
			%{libdir}/perl5/auto/List
			/usr/share/man/man3/List::Util*
			/usr/share/man/man3/Scalar::Util*
		end
	end

	package perl-Socket
		epoch = 0
		version = 2.013

		summary = C socket.h defines and structure manipulators.
		description
			This module is just a translation of the C socket.h file.  Unlike the old
			mechanism of requiring a translated socket.ph file, this uses the h2xs program
			(see the Perl source distribution) and your native C compiler.  This means
			that it has a far more likely chance of getting the numbers right.  This
			includes all of the commonly used pound-defines like AF_INET, SOCK_STREAM, etc.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/auto/Socket/Socket.*
			%{libdir}/perl5/Socket.pm
			%{mandir}/man3/Socket.3*
		end
	end

	package perl-Storable
		epoch = 0
		version = 2.49

		summary = Persistence for Perl data structures.
		description
			The Storable package brings persistence to your Perl data structures
			containing scalar, array, hash or reference objects, i.e. anything that
			can be conveniently stored to disk and retrieved at a later time.
		end

		requires
			%{perl_requires}
			perl(Carp)
			perl(Fcntl)
			perl(IO::File)
		end

		files
			%{libdir}/perl5/Storable.pm
			%{libdir}/perl5/auto/Storable
			%{mandir}/man3/Storable.*
		end
	end

	package perl-Sys-Syslog
		epoch = 0
		version = 0.33

		summary = Perl interface to the UNIX syslog(3) calls.
		description
			Sys::Syslog is an interface to the UNIX syslog(3) function. Call syslog() with
			a string priority and a list of printf() arguments just like at syslog(3).
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/Sys/Syslog.pm
			%{libdir}/perl5/auto/Sys/Syslog
			%{mandir}/man3/Sys::Syslog.*
		end
	end

	package perl-Term-ANSIColor
		epoch = 0
		version = 4.02
		arch = noarch

		summary = Color screen output using ANSI escape sequences.
		description
			This module has two interfaces, one through color() and colored() and the
			other through constants. It also offers the utility functions uncolor(),
			colorstrip(), colorvalid(), and coloralias(), which have to be explicitly
			imported to be used.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Term/ANSIColor.pm
			%{mandir}/man3/Term::ANSIColor*
		end
	end

	package perl-Test-Harness
		epoch = 0
		version = 3.30
		arch = noarch

		summary = Run Perl standard test scripts with statistics.
		description
			Run Perl standard test scripts with statistics.
			Use TAP::Parser, Test::Harness package was whole rewritten.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/bin/prove
			/usr/share/perl5/App*
			/usr/share/perl5/TAP*
			/usr/share/perl5/Test/Harness*
			/usr/share/man/man1/prove.1*
			/usr/share/man/man3/App*
			/usr/share/man/man3/TAP*
			/usr/share/man/man3/Test::Harness*
		end
	end

	package perl-Test-Simple
		epoch = 0
		version = 1.001002
		arch = noarch

		summary = Basic utilities for writing tests.
		description
			Basic utilities for writing tests.
		end

		requires
			%{perl_requires}
			perl(Data::Dumper)
		end

		files
			/usr/share/perl5/Test/More*
			/usr/share/perl5/Test/Builder*
			/usr/share/perl5/Test/Simple*
			/usr/share/perl5/Test/Tutorial*
			/usr/share/man/man3/Test::More*
			/usr/share/man/man3/Test::Builder*
			/usr/share/man/man3/Test::Simple*
			/usr/share/man/man3/Test::Tutorial*
		end
	end

	package perl-Text-ParseWords
		epoch = 0
		version = 3.29
		arch = noarch

		summary = Parse text into an array of tokens or array of arrays.
		description
			Parse text into an array of tokens or array of arrays.
		end

		requires
			%{perl_requires}
			perl(Carp)
		end

		files
			%{datadir}/perl5/Text/ParseWords.pm
			%{mandir}/man3/Text::ParseWords.*
		end
	end

	package perl-Thread-Queue
		epoch = 0
		version = 3.05
		arch = noarch

		summary = Thread-safe queues.
		description
			This module provides thread-safe FIFO queues that can be accessed safely by
			any number of threads.
		end

		requires
			%{perl_requires}
			perl(Carp)
		end

		files
			%{datadir}/perl5/Thread/Queue.pm
			%{mandir}/man3/Thread::Queue.*
		end
	end

	package perl-Time-HiRes
		epoch = 0
		version = 1.9726

		summary = High resolution alarm, sleep, gettimeofday, interval timers.
		description
			The Time::HiRes module implements a Perl interface to the usleep, nanosleep,
			ualarm, gettimeofday, and setitimer/getitimer system calls, in other words,
			high resolution time and timers.
		end

		requires
			%{perl_requires}
			perl(Carp)
		end

		files
			%{libdir}/perl5/Time/HiRes.pm
			%{libdir}/perl5/auto/Time/HiRes
			%{mandir}/man3/Time::HiRes.*
		end
	end

	package perl-Time-Local
		epoch = 0
		version = 1.2300
		arch = noarch

		summary = Efficiently compute time from local and GMT time.
		description
			This module provides functions that are the inverse of built-in perl functions
			localtime() and gmtime(). They accept a date as a six-element array, and
			return the corresponding time(2) value in seconds since the system epoch
			(Midnight, January 1, 1970 GMT on Unix, for example). This value can be
			positive or negative, though POSIX only requires support for positive values,
			so dates before the system's epoch may not work on all operating systems.
		end

		requires
			%{perl_requires}
		end

		files
			%{datadir}/perl5/Time/Local.pm
			%{mandir}/man3/Time::Local.*
		end
	end

	package perl-Time-Piece
		epoch = 0
		version = 1.27

		summary = Time objects from localtime and gmtime.
		description
			The Time::Piece module replaces the standard localtime and gmtime functions
			with implementations that return objects.  It does so in a backwards compatible
			manner, so that using localtime or gmtime as documented in perlfunc still
			behave as expected.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/Time/Piece.pm
			%{libdir}/perl5/Time/Seconds.pm
			%{libdir}/perl5/auto/Time/Piece/
			/usr/share/man/man3/Time::Piece.3*
			/usr/share/man/man3/Time::Seconds.3*
		end
	end

	package perl-threads
		epoch = 0
		version = 1.93

		summary = Perl interpreter-based threads.
		description
			Since Perl 5.8, thread programming has been available using a model called
			interpreter threads  which provides a new Perl interpreter for each thread,
			and, by default, results in no data or state information being shared between
			threads. (Prior to Perl 5.8, 5005threads was available through the Thread.pm
			API. This threading model has been deprecated, and was removed as of Perl
			5.10.0.) As just mentioned, all variables are, by default, thread local. To use
			shared variables, you need to also load threads::shared.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/auto/threads/threads*
			%{libdir}/perl5/threads.pm
			/usr/share/man/man3/threads.3*
		end
	end

	package perl-threads-shared
		epoch = 0
		version = 1.46

		summary = Perl extension for sharing data structures between threads.
		description
			By default, variables are private to each thread, and each newly created thread
			gets a private copy of each existing variable. This module allows you to share
			variables across different threads (and pseudo-forks on Win32). It is used
			together with the threads module.  This module supports the sharing of the
			following data types only: scalars and scalar refs, arrays and array refs, and
			hashes and hash refs.
		end

		requires
			%{perl_requires}
		end

		files
			%{libdir}/perl5/auto/threads/shared*
			%{libdir}/perl5/threads/shared*
			/usr/share/man/man3/threads::shared*
		end
	end

	package perl-version
		epoch = 0
		version = 0.99.09
		arch = noarch

		summary = Perl extension for Version Objects.
		description
			Perl extension for Version Objects.
		end

		requires
			%{perl_requires}
		end

		files
			/usr/share/perl5/version.pm
			/usr/share/perl5/version.pod
			/usr/share/perl5/version/
			/usr/share/man/man3/version.3*
			/usr/share/man/man3/version::Internals.3*
		end
	end

	package perl-core
		epoch = 0

		summary = Base perl metapackage.
		description
			A metapackage which requires all of the perl bits and modules in the upstream
			tarball from perl.org.
		end

		requires
			%{perl_requires}
			perl-libs
			perl-devel
			perl-App-a2p
			perl-App-find2perl
			perl-App-s2p
			perl-Archive-Tar
			perl-autodie
			perl-Compress-Raw-Bzip2
			perl-Compress-Raw-Zlib
			perl-CGI
			perl-CPAN
			perl-CPAN-Meta
			perl-CPAN-Meta-YAML
			perl-CPAN-Meta-Requirements
			perl-Carp
			perl-constant
			perl-Data-Dumper
			perl-DB_File
			perl-Devel-PPPort
			perl-Digest
			perl-Digest-MD5
			perl-Digest-SHA
			perl-Encode
			perl-Env
			perl-Exporter
			perl-ExtUtils-CBuilder
			perl-ExtUtils-Command
			perl-ExtUtils-Embed
			perl-ExtUtils-Install
			perl-ExtUtils-MakeMaker
			perl-ExtUtils-Manifest
			perl-ExtUtils-Miniperl
			perl-ExtUtils-ParseXS
			perl-experimental
			perl-File-Fetch
			perl-File-Path
			perl-File-Temp
			perl-Filter
			perl-Filter-Simple
			perl-Getopt-Long
			perl-HTTP-Tiny
			perl-IO-Compress
			perl-IO-Socket-IP
			perl-IO-Zlib
			perl-IPC-Cmd
			perl-JSON-PP
			perl-Locale-Codes
			perl-Locale-Maketext
			perl-Locale-Maketext-Simple
			perl-Module-Build
			perl-Module-CoreList
			perl-Module-CoreList-tools
			perl-Module-Load
			perl-Module-Load-Conditional
			perl-Module-Loaded
			perl-Module-Metadata
			perl-Package-Constants
			perl-Params-Check
			perl-Parse-CPAN-Meta
			perl-Perl-OSType
			perl-Path-Tools
			perl-Pod-Checker
			perl-Pod-Parser
			perl-Pod-Perldoc
			perl-Pod-Simple
			perl-Pod-Usage
			perl-parent
			perl-podlators
			perl-Scalar-List-Utils
			perl-Socket
			perl-Storable
			perl-Sys-Syslog
			perl-Term-ANSIColor
			perl-Test-Harness
			perl-Test-Simple
			perl-Text-ParseWords
			perl-Thread-Queue
			perl-Time-HiRes
			perl-Time-Local
			perl-Time-Piece
			perl-threads
			perl-threads-shared
			perl-version
		end

		# Nothing. Nada. Zilch. Zarro. Uh uh. Nope. Sorry.
		files
		end
	end

	package %{name}-debuginfo
		template DEBUGINFO
	end
end
